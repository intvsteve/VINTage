//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace INTV.LtoFlash.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("INTV.LtoFlash.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active Device.
        /// </summary>
        internal static string ActiveDevice_Header {
            get {
                return ResourceManager.GetString("ActiveDevice_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create LUIGI-format ROM..
        /// </summary>
        internal static string AddItemRejected_FailedToCreateLUIGIFile {
            get {
                return ResourceManager.GetString("AddItemRejected_FailedToCreateLUIGIFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file could not be found..
        /// </summary>
        internal static string AddItemRejected_FileNotFound {
            get {
                return ResourceManager.GetString("AddItemRejected_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROM is too large ({0} bytes). The largest supported ROM size is {1} bytes..
        /// </summary>
        internal static string AddItemRejected_FileTooLargeFormat {
            get {
                return ResourceManager.GetString("AddItemRejected_FileTooLargeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tried to add an invalid file to a folder..
        /// </summary>
        internal static string AddItemRejected_InvalidFile {
            get {
                return ResourceManager.GetString("AddItemRejected_InvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tried to add a file to an invalid folder..
        /// </summary>
        internal static string AddItemRejected_InvalidFolder {
            get {
                return ResourceManager.GetString("AddItemRejected_InvalidFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tried to add an invalid file to an invalid folder..
        /// </summary>
        internal static string AddItemRejected_InvalidFolderAndFile {
            get {
                return ResourceManager.GetString("AddItemRejected_InvalidFolderAndFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name was empty..
        /// </summary>
        internal static string AddItemRejected_NoFileName {
            get {
                return ResourceManager.GetString("AddItemRejected_NoFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System ROMs such as EXEC and GROM are not playable..
        /// </summary>
        internal static string AddItemRejected_NotPlayable {
            get {
                return ResourceManager.GetString("AddItemRejected_NotPlayable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder can contain at most {0} items..
        /// </summary>
        internal static string AddItemRejected_TooManyFiles_Format {
            get {
                return ResourceManager.GetString("AddItemRejected_TooManyFiles_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system can contain at most {0} files and folders..
        /// </summary>
        internal static string AddItemRejected_TooManyFileSystemFiles_Format {
            get {
                return ResourceManager.GetString("AddItemRejected_TooManyFileSystemFiles_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system can contain at most {0} folders..
        /// </summary>
        internal static string AddItemRejected_TooManyFolders_Format {
            get {
                return ResourceManager.GetString("AddItemRejected_TooManyFolders_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system can contain at most {0} forks..
        /// </summary>
        internal static string AddItemRejected_TooManyForks_Format {
            get {
                return ResourceManager.GetString("AddItemRejected_TooManyForks_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination folder cannot accept more items..
        /// </summary>
        internal static string AddItemRejected_TooManyItems {
            get {
                return ResourceManager.GetString("AddItemRejected_TooManyItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to add an unsupported file system entity of type: {0}.
        /// </summary>
        internal static string AddItemRejected_UnknownFileSystemEntityType_Format {
            get {
                return ResourceManager.GetString("AddItemRejected_UnknownFileSystemEntityType_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding Menu Items.
        /// </summary>
        internal static string AddItems_ProgressTitle {
            get {
                return ResourceManager.GetString("AddItems_ProgressTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add items to the destination due to an unexpected error. See details below..
        /// </summary>
        internal static string AddItemsOperation_Failed {
            get {
                return ResourceManager.GetString("AddItemsOperation_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more ROMs could not be added to the menu layout..
        /// </summary>
        internal static string AddItemsOperation_FailedToAddMessage {
            get {
                return ResourceManager.GetString("AddItemsOperation_FailedToAddMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add the following items:.
        /// </summary>
        internal static string AddItemsOperation_FailedToAddReportHeader {
            get {
                return ResourceManager.GetString("AddItemsOperation_FailedToAddReportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred preparing one or more files for use on LTO Flash!..
        /// </summary>
        internal static string AddItemsOperation_FailedToPrepareMessage {
            get {
                return ResourceManager.GetString("AddItemsOperation_FailedToPrepareMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more problems occurred when adding ROMs. The errors are described in detail below..
        /// </summary>
        internal static string AddItemsRejected_ErrorAddingROMsMessage {
            get {
                return ResourceManager.GetString("AddItemsRejected_ErrorAddingROMsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Adding ROMs.
        /// </summary>
        internal static string AddItemsRejected_ErrorAddingROMsTitle {
            get {
                return ResourceManager.GetString("AddItemsRejected_ErrorAddingROMsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Selected ROMs from ROM List.
        /// </summary>
        internal static string AddRomsToMenuCommand_ContextMenuItemName {
            get {
                return ResourceManager.GetString("AddRomsToMenuCommand_ContextMenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add to Menu.
        /// </summary>
        internal static string AddRomsToMenuCommand_Name {
            get {
                return ResourceManager.GetString("AddRomsToMenuCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add selected ROMs in the ROM List to the Menu Layout.
        /// </summary>
        internal static string AddRomsToMenuCommand_Tip {
            get {
                return ResourceManager.GetString("AddRomsToMenuCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        internal static string AdvancedGroupCommand_Header {
            get {
                return ResourceManager.GetString("AdvancedGroupCommand_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred when creating the file system backup..
        /// </summary>
        internal static string BackupCommand_ExceptionMessage {
            get {
                return ResourceManager.GetString("BackupCommand_ExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove the backup located at:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommand_Failed_Delete_Message_Format {
            get {
                return ResourceManager.GetString("BackupCommand_Failed_Delete_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Backup.
        /// </summary>
        internal static string BackupCommand_Failed_Delete_Title {
            get {
                return ResourceManager.GetString("BackupCommand_Failed_Delete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when creating a backup of the file system. The error was:
        ///
        ///{0}
        ///
        ///This may occur if LTO Flash! is connected to your computer and a powered-on Intellivision simultaneously, or the device is unplugged from the system during the backup.
        ///
        ///To avoid this problem, ensure the remains off for the duration of the backup operation. Also, do not unplug your LTO Flash! during the backup.
        ///
        ///The backup may be incomplete. Would you like to keep it? If you choose &apos;No&apos;, it will be deleted..
        /// </summary>
        internal static string BackupCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("BackupCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Failed.
        /// </summary>
        internal static string BackupCommand_Failed_Title {
            get {
                return ResourceManager.GetString("BackupCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup File System....
        /// </summary>
        internal static string BackupCommand_MenuItemName {
            get {
                return ResourceManager.GetString("BackupCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup.
        /// </summary>
        internal static string BackupCommand_Name {
            get {
                return ResourceManager.GetString("BackupCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back up the contents of the LTO Flash!.
        /// </summary>
        internal static string BackupCommand_TipDescription {
            get {
                return ResourceManager.GetString("BackupCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Device Contents.
        /// </summary>
        internal static string BackupCommand_TipTitle {
            get {
                return ResourceManager.GetString("BackupCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permission denied attempting to create backup for file:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommand_UnauthorizedAccessErrorMessageFormat {
            get {
                return ResourceManager.GetString("BackupCommand_UnauthorizedAccessErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Cancelled.
        /// </summary>
        internal static string BackupCommandCancelled_Title {
            get {
                return ResourceManager.GetString("BackupCommandCancelled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backup operation was cancelled while in progress. Any contents that were retrieved may be found in the following location:.
        /// </summary>
        internal static string BackupCommandComplete_Cancelled_Message {
            get {
                return ResourceManager.GetString("BackupCommandComplete_Cancelled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As much data has been retrieved as possible, but some files may not be accessible. A complete list of these items has been recorded in an error report in the backup directory.
        ///
        ///You should not use this backup as a restore point.
        ///
        ///Would you like to keep this backup?.
        /// </summary>
        internal static string BackupCommandComplete_DireWarning {
            get {
                return ResourceManager.GetString("BackupCommandComplete_DireWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following problems were discovered during backup:.
        /// </summary>
        internal static string BackupCommandComplete_EncounteredErrors {
            get {
                return ResourceManager.GetString("BackupCommandComplete_EncounteredErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent File System Backup.
        /// </summary>
        internal static string BackupCommandComplete_ErrorsOccurredTitle {
            get {
                return ResourceManager.GetString("BackupCommandComplete_ErrorsOccurredTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A complete backup of the contents of your LTO Flash! can be found in the following location:.
        /// </summary>
        internal static string BackupCommandComplete_Message {
            get {
                return ResourceManager.GetString("BackupCommandComplete_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Complete.
        /// </summary>
        internal static string BackupCommandComplete_Title {
            get {
                return ResourceManager.GetString("BackupCommandComplete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file system path for backup file:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommandErrorHandler_ArgumentErrorMessageFormat {
            get {
                return ResourceManager.GetString("BackupCommandErrorHandler_ArgumentErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate directory path for backup file:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommandErrorHandler_DirectoryNotFoundErrorMessageFormat {
            get {
                return ResourceManager.GetString("BackupCommandErrorHandler_DirectoryNotFoundErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to execute file system operation for file:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommandErrorHandler_IOExceptionErrorMessageFormat {
            get {
                return ResourceManager.GetString("BackupCommandErrorHandler_IOExceptionErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path is too long:
        ///
        ///{0}.
        /// </summary>
        internal static string BackupCommandErrorHandler_PathTooLongErrorMessageFormat {
            get {
                return ResourceManager.GetString("BackupCommandErrorHandler_PathTooLongErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Menu Layout....
        /// </summary>
        internal static string BackupMenuLayoutCommand_MenuItemName {
            get {
                return ResourceManager.GetString("BackupMenuLayoutCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup copies of your Menu Layout and ROM list have been stored in the following location:.
        /// </summary>
        internal static string BackupMenuLayoutCommand_Message {
            get {
                return ResourceManager.GetString("BackupMenuLayoutCommand_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup Menu Layout.
        /// </summary>
        internal static string BackupMenuLayoutCommand_Name {
            get {
                return ResourceManager.GetString("BackupMenuLayoutCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make a backup copy of the current menu layout..
        /// </summary>
        internal static string BackupMenuLayoutCommand_TipDescription {
            get {
                return ResourceManager.GetString("BackupMenuLayoutCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Layout Backup.
        /// </summary>
        internal static string BackupMenuLayoutCommand_Title {
            get {
                return ResourceManager.GetString("BackupMenuLayoutCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents of the ROMs cache directory have been deleted..
        /// </summary>
        internal static string ClearCacheCommand_CompleteMessage {
            get {
                return ResourceManager.GetString("ClearCacheCommand_CompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ROMs cache directory was not found..
        /// </summary>
        internal static string ClearCacheCommand_DirectoryNotFoundMessage {
            get {
                return ResourceManager.GetString("ClearCacheCommand_DirectoryNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear ROMs Cache.
        /// </summary>
        internal static string ClearCacheCommand_Name {
            get {
                return ResourceManager.GetString("ClearCacheCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting: {0}....
        /// </summary>
        internal static string ClearCacheCommand_ProgressFormat {
            get {
                return ResourceManager.GetString("ClearCacheCommand_ProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clears the cached copies of ROMs stored in the ROMsCache directory..
        /// </summary>
        internal static string ClearCacheCommand_Tip {
            get {
                return ResourceManager.GetString("ClearCacheCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearing ROMs Cache.
        /// </summary>
        internal static string ClearCacheCommand_Title {
            get {
                return ResourceManager.GetString("ClearCacheCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        internal static string Connect {
            get {
                return ResourceManager.GetString("Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to Device on Port.
        /// </summary>
        internal static string ConnectToDevice_GroupName {
            get {
                return ResourceManager.GetString("ConnectToDevice_GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to connect to the LTO Flash! device discovered on the following port?.
        /// </summary>
        internal static string ConnectToDevice_Message {
            get {
                return ResourceManager.GetString("ConnectToDevice_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to connect to the LTO Flash! device on port {0}? Doing so will disconnect the currently active device..
        /// </summary>
        internal static string ConnectToDevice_Message_Format {
            get {
                return ResourceManager.GetString("ConnectToDevice_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to Device.
        /// </summary>
        internal static string ConnectToDevice_Title {
            get {
                return ResourceManager.GetString("ConnectToDevice_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power: {0}.
        /// </summary>
        internal static string ConsolePowerState_Format {
            get {
                return ResourceManager.GetString("ConsolePowerState_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string ConsolePowerState_Off {
            get {
                return ResourceManager.GetString("ConsolePowerState_Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to On.
        /// </summary>
        internal static string ConsolePowerState_On {
            get {
                return ResourceManager.GetString("ConsolePowerState_On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates power state of the console..
        /// </summary>
        internal static string ConsolePowerState_Tip {
            get {
                return ResourceManager.GetString("ConsolePowerState_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;No Device&gt;.
        /// </summary>
        internal static string ConsolePowerState_Unknown {
            get {
                return ResourceManager.GetString("ConsolePowerState_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Crash log unavailable&gt;.
        /// </summary>
        internal static string CrashReporter_Detail_CrashLogUnavailable {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_CrashLogUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device ID:.
        /// </summary>
        internal static string CrashReporter_Detail_DeviceId {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_DeviceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DEVICE ERROR LOG:
        ///The device error log contains the following information:
        ///
        ///{0}
        ///
        ///You can also find this in an error log file:
        ///
        ///{1}.
        /// </summary>
        internal static string CrashReporter_Detail_ErrorLogFormat {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_ErrorLogFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Error log unavailable&gt;.
        /// </summary>
        internal static string CrashReporter_Detail_ErrorLogUnavailable {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_ErrorLogUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FIRMWARE CRASH:
        ///The firmware on your LTO Flash! has crashed. A raw crash log will be attached to this error report. You can also find this binary file at the following location:
        ///
        ///{0}.
        /// </summary>
        internal static string CrashReporter_Detail_FirmwareCrashFormat {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_FirmwareCrashFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp (UTC):.
        /// </summary>
        internal static string CrashReporter_Detail_Timestamp {
            get {
                return ResourceManager.GetString("CrashReporter_Detail_Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following issues have been discovered on your LTO Flash!.
        /// </summary>
        internal static string CrashReporter_DetailHeader {
            get {
                return ResourceManager.GetString("CrashReporter_DetailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previously unreported problem has been discovered on your LTO Flash!.
        /// </summary>
        internal static string CrashReporter_Message {
            get {
                return ResourceManager.GetString("CrashReporter_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! Error.
        /// </summary>
        internal static string CrashReporter_Title {
            get {
                return ResourceManager.GetString("CrashReporter_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Version.
        /// </summary>
        internal static string CurrentFirmwareCommand_Name {
            get {
                return ResourceManager.GetString("CurrentFirmwareCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently active version of firmware running on the device..
        /// </summary>
        internal static string CurrentFirmwareCommand_TipDescription {
            get {
                return ResourceManager.GetString("CurrentFirmwareCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently Running Firmware Version.
        /// </summary>
        internal static string CurrentFirmwareCommand_TipTitle {
            get {
                return ResourceManager.GetString("CurrentFirmwareCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash!.
        /// </summary>
        internal static string Device_DefaultCustomName {
            get {
                return ResourceManager.GetString("Device_DefaultCustomName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Log.
        /// </summary>
        internal static string Device_ErrorLog_Header {
            get {
                return ResourceManager.GetString("Device_ErrorLog_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load {0}..
        /// </summary>
        internal static string DeviceCommand_DownloadAndPlay_FailedFormat {
            get {
                return ResourceManager.GetString("DeviceCommand_DownloadAndPlay_FailedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading and Launching {0}....
        /// </summary>
        internal static string DeviceCommand_DownloadAndPlay_TitleFormat {
            get {
                return ResourceManager.GetString("DeviceCommand_DownloadAndPlay_TitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to execute device command: {0}..
        /// </summary>
        internal static string DeviceCommand_Generic_FailedFormat {
            get {
                return ResourceManager.GetString("DeviceCommand_Generic_FailedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid response reading file system table. Data stream reported {0} entries but maximum possible is {1}..
        /// </summary>
        internal static string DeviceCommand_InvalidFileSystemEntryCount_Format {
            get {
                return ResourceManager.GetString("DeviceCommand_InvalidFileSystemEntryCount_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system table is invalid. Expected header of &apos;{0}&apos; but received a header of &apos;{1}&apos;..
        /// </summary>
        internal static string DeviceCommand_InvalidFileSystemHeader_Format {
            get {
                return ResourceManager.GetString("DeviceCommand_InvalidFileSystemHeader_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &apos;{0}&apos; with arguments: 0x{1:X8}, 0x{2:X8}, 0x{3:X8}, 0x{4:X8} failed, returning result: 0x{5:X2}..
        /// </summary>
        internal static string DeviceCommandExecuteFailed_ExceptionMessageFormat {
            get {
                return ResourceManager.GetString("DeviceCommandExecuteFailed_ExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;None Available&gt;.
        /// </summary>
        internal static string DeviceConnection_NoneAvailable {
            get {
                return ResourceManager.GetString("DeviceConnection_NoneAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Information....
        /// </summary>
        internal static string DeviceInformationCommand_Name {
            get {
                return ResourceManager.GetString("DeviceInformationCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconstructing menu layout....
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_CreatingMenuLayout {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_CreatingMenuLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to back up the file system..
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_Failed {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving file system data fork ({0} of {1})....
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_RetrievingFiles_Format {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_RetrievingFiles_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving file system data fork ({0} of {1})....
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_SavingFiles_Format {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_SavingFiles_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inspecting device file system....
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_Syncing {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_Syncing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backing Up File System....
        /// </summary>
        internal static string DeviceMultistageCommand_BackupFileSystem_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_BackupFileSystem_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving firmware crash log....
        /// </summary>
        internal static string DeviceMultistageCommand_GetErrorAndCrashLogs_GetCrashLog {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_GetErrorAndCrashLogs_GetCrashLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving command error log....
        /// </summary>
        internal static string DeviceMultistageCommand_GetErrorAndCrashLogs_GetErrorLog {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_GetErrorAndCrashLogs_GetErrorLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifying available error information....
        /// </summary>
        internal static string DeviceMultistageCommand_GetErrorAndCrashLogs_LocatingInformation {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_GetErrorAndCrashLogs_LocatingInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving Device Error Information....
        /// </summary>
        internal static string DeviceMultistageCommand_GetErrorAndCrashLogs_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_GetErrorAndCrashLogs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file contents.
        /// </summary>
        internal static string DeviceMultistageCommand_RemovingFileContents {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_RemovingFileContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring File System....
        /// </summary>
        internal static string DeviceMultistageCommand_RestoreFileSystem_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_RestoreFileSystem_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Menu Layout from LTO Flash!....
        /// </summary>
        internal static string DeviceMultistageCommand_SyncingToFiles_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_SyncingToFiles_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting Device Name....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdateDeviceName_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdateDeviceName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting Device Owner....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdateDeviceOwner_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdateDeviceOwner_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update firmware on the device..
        /// </summary>
        internal static string DeviceMultistageCommand_UpdateFirmware_DownloadFailed {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdateFirmware_DownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update device firmware..
        /// </summary>
        internal static string DeviceMultistageCommand_UpdateFirmware_Failed {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdateFirmware_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Firmware....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdateFirmware_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdateFirmware_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconciling local and device file system ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_ComputingChangesProgress {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_ComputingChangesProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating &apos;{0}&apos; ({1} of {2})....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_CreatingItemProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_CreatingItemProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating {0} : {1}-{2} of {3}....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_CreatingItemsProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_CreatingItemsProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0} : ({1} of {2})....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_DeletingItemProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_DeletingItemProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Files - Part {3} : {0} ({1} of {2}) ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_ProgressTitleFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_ProgressTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Files....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transferring &apos;{0}&apos; to RAM ({1} of {2}) ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_TransferToRamProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_TransferToRamProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &apos;{0}&apos; ({1} of {2}) ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_UpdatingItemProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_UpdatingItemProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating {0} : {1}-{2} of {3} ... .
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFiles_UpdatingItemsProgressFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFiles_UpdatingItemsProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating File - Part {3} : File System {0} Entries ({1} - {2}) ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFileSystemTables_ProgressTitleFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFileSystemTables_ProgressTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating File - Part {2} : File System {0} Entry ({1}) ....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingFileSystemTablesOneEntry_ProgressTitleFormat {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingFileSystemTablesOneEntry_ProgressTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating directories table....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingGlobalDirectoriesTable {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingGlobalDirectoriesTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating files table....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingGlobalFilesTable {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingGlobalFilesTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconciling device file system and local menu layout....
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingMenuLayout_ComputingChangesProgress {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingMenuLayout_ComputingChangesProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system on the device is in an inconsistent state..
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingMenuLayout_InconsistentState {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingMenuLayout_InconsistentState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system on the connected device is not in a consistent state. It appears that an update to it was interrupted while in progress. The resulting menu may be incomplete or inaccurate.
        ///
        ///The recommended course of action in this case is to send a valid menu layout to your device, rather than force your menu layout to match that of your LTO Flash!
        ///
        ///Remember that you can also perform a backup of your LTO Flash! if you so desire, which will preserve its contents, even if it is in an inconsistent state.
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DeviceMultistageCommand_UpdatingMenuLayout_InconsistentStateErrorMessage {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_UpdatingMenuLayout_InconsistentStateErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating....
        /// </summary>
        internal static string DeviceMultistageCommand_Validating_Title {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_Validating_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device did not broadcast valid identification data..
        /// </summary>
        internal static string DeviceMultistageCommand_ValidationFailed {
            get {
                return ResourceManager.GetString("DeviceMultistageCommand_ValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking device at {0}....
        /// </summary>
        internal static string DeviceSearch_Task_Progress_Format {
            get {
                return ResourceManager.GetString("DeviceSearch_Task_Progress_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for Devices....
        /// </summary>
        internal static string DeviceSearch_Task_Title {
            get {
                return ResourceManager.GetString("DeviceSearch_Task_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Settings.
        /// </summary>
        internal static string DeviceSettingsRibbonGroupCommand_Name {
            get {
                return ResourceManager.GetString("DeviceSettingsRibbonGroupCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique ID.
        /// </summary>
        internal static string DeviceUniqueIdCommand_Name {
            get {
                return ResourceManager.GetString("DeviceUniqueIdCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the unique identifier (serial number) of the currently connected LTO Flash! device..
        /// </summary>
        internal static string DeviceUniqueIdCommand_TipDescription {
            get {
                return ResourceManager.GetString("DeviceUniqueIdCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device on port &apos;{0}&apos; may not be functioning correctly. It is not responding properly to LTO Flash! commands. See the complete error report below..
        /// </summary>
        internal static string DeviceValidation_Failed_Message_Format {
            get {
                return ResourceManager.GetString("DeviceValidation_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Validation Failed.
        /// </summary>
        internal static string DeviceValidation_Failed_Title {
            get {
                return ResourceManager.GetString("DeviceValidation_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directories.
        /// </summary>
        internal static string Directories {
            get {
                return ResourceManager.GetString("Directories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directories.
        /// </summary>
        internal static string DirectoriesInSentence {
            get {
                return ResourceManager.GetString("DirectoriesInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory.
        /// </summary>
        internal static string Directory {
            get {
                return ResourceManager.GetString("Directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to directory.
        /// </summary>
        internal static string DirectoryInSentence {
            get {
                return ResourceManager.GetString("DirectoryInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect from LTO Flash!.
        /// </summary>
        internal static string DisconnectDeviceCommand_MenuItemName {
            get {
                return ResourceManager.GetString("DisconnectDeviceCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect.
        /// </summary>
        internal static string DisconnectDeviceCommand_Name {
            get {
                return ResourceManager.GetString("DisconnectDeviceCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnects from the current device..
        /// </summary>
        internal static string DisconnectDeviceCommand_TipDescription {
            get {
                return ResourceManager.GetString("DisconnectDeviceCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when loading {0}. The error was:
        ///
        ///{1}
        ///
        ///Ensure that the ROM file exists. Also, check that the LTO Flash! cartridge is properly inserted into your console and that all the connections are secure. If the problem persists, turn off your console, and disconnect your LTO Flash! from your computer. Then, reconnect to your computer and turn on your Intellivision..
        /// </summary>
        internal static string DownloadAndPlayCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to Load {0}.
        /// </summary>
        internal static string DownloadAndPlayCommand_Failed_Title_Format {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_Failed_Title_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected ROM ({0}) is not compatible with this LTO Flash! device, and will not run correctly. Do you still wish to run it?.
        /// </summary>
        internal static string DownloadAndPlayCommand_IncompatibleRom_Message_Format {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_IncompatibleRom_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible ROM.
        /// </summary>
        internal static string DownloadAndPlayCommand_IncompatibleRom_Title {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_IncompatibleRom_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play on LTO Flash!.
        /// </summary>
        internal static string DownloadAndPlayCommand_MenuItemName {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ROM for {0} cannot be found at the path:
        ///
        ///{1}.
        /// </summary>
        internal static string DownloadAndPlayCommand_Missing_Message_Format {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_Missing_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play.
        /// </summary>
        internal static string DownloadAndPlayCommand_Name {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play the program selected in the ROM list on the connected LTO Flash! Your LTO Flash! must be plugged into an Intellivision console with the power turned on, and not already running a program..
        /// </summary>
        internal static string DownloadAndPlayCommand_TipDescription {
            get {
                return ResourceManager.GetString("DownloadAndPlayCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file:
        ///
        ///{0}
        ///
        ///does not appear to be a valid ROM file..
        /// </summary>
        internal static string DownloadAndPlayPromptCommand_Failed_MessageFormat {
            get {
                return ResourceManager.GetString("DownloadAndPlayPromptCommand_Failed_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to Load and Start.
        /// </summary>
        internal static string DownloadAndPlayPromptCommand_Failed_Title {
            get {
                return ResourceManager.GetString("DownloadAndPlayPromptCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse &amp; Play....
        /// </summary>
        internal static string DownloadAndPlayPromptCommand_Name {
            get {
                return ResourceManager.GetString("DownloadAndPlayPromptCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse to select a ROM, then run it. Your LTO Flash! must be plugged into an Intellivision console with the power turned on, and not already running a program..
        /// </summary>
        internal static string DownloadAndPlayPromptCommand_TipDescription {
            get {
                return ResourceManager.GetString("DownloadAndPlayPromptCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string EcsCompatibilityMode_Disabled {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will disable the ECS ROMs unless running a program that requires the ECS in order to function. Games that are only enhanced by the ECS (i.e. for which the ECS is optional) will not have ECS features enabled..
        /// </summary>
        internal static string EcsCompatibilityMode_Disabled_ToolTipDescription {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Disabled_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        internal static string EcsCompatibilityMode_Enabled {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will not attempt to disable the ECS ROMs in order to remedy any program incompatibilities. Some programs may not function correctly when the ECS is attached to the Master Component..
        /// </summary>
        internal static string EcsCompatibilityMode_Enabled_ToolTipDescription {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Enabled_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatible.
        /// </summary>
        internal static string EcsCompatibilityMode_Limited {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Limited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will only disable the ECS ROMs for programs that are known to be incompatible with the ECS. Games are presumed to be compatible with the ECS unless otherwise specified..
        /// </summary>
        internal static string EcsCompatibilityMode_Limited_ToolTipDescription {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Limited_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ECS Games.
        /// </summary>
        internal static string EcsCompatibilityMode_Strict {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Strict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will enable the ECS ROMs only for programs known to require the ECS, or to offer enhanced features if the ECS is attached. (Factory Default).
        /// </summary>
        internal static string EcsCompatibilityMode_Strict_ToolTipDescription {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_Strict_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ECS ROM Enabled: {0}.
        /// </summary>
        internal static string EcsCompatibilityMode_ToolTipTitleFormat {
            get {
                return ResourceManager.GetString("EcsCompatibilityMode_ToolTipTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Long Name.
        /// </summary>
        internal static string EditLongNameCommand_Name {
            get {
                return ResourceManager.GetString("EditLongNameCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Name.
        /// </summary>
        internal static string EditNameCommand_Name {
            get {
                return ResourceManager.GetString("EditNameCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit the long or short name of the selected menu item..
        /// </summary>
        internal static string EditNameCommand_ToolTipDescription {
            get {
                return ResourceManager.GetString("EditNameCommand_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Menu Item Name.
        /// </summary>
        internal static string EditNameCommand_ToolTipTitle {
            get {
                return ResourceManager.GetString("EditNameCommand_ToolTipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Short Name.
        /// </summary>
        internal static string EditShortNameCommand_Name {
            get {
                return ResourceManager.GetString("EditShortNameCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Menu Layout....
        /// </summary>
        internal static string EmptyMenuLayoutCommand_MenuItemName {
            get {
                return ResourceManager.GetString("EmptyMenuLayoutCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Menu Layout.
        /// </summary>
        internal static string EmptyMenuLayoutCommand_Name {
            get {
                return ResourceManager.GetString("EmptyMenuLayoutCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes all entries from the Menu Layout..
        /// </summary>
        internal static string EmptyMenuLayoutCommand_TipDescription {
            get {
                return ResourceManager.GetString("EmptyMenuLayoutCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING!
        ///
        ///Choosing to empty your Menu Layout will remove all entries from your menu!
        ///
        ///This will NOT affect the menu on your LTO Flash!.
        ///
        ///Are you sure you wish to proceed?.
        /// </summary>
        internal static string EmptyMenuLayoutCommand_WarningMessage {
            get {
                return ResourceManager.GetString("EmptyMenuLayoutCommand_WarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Menu Layout.
        /// </summary>
        internal static string EmptyMenuLayoutCommand_WarningTitle {
            get {
                return ResourceManager.GetString("EmptyMenuLayoutCommand_WarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;empty error report&gt;.
        /// </summary>
        internal static string ErrorBufferReport_Empty {
            get {
                return ResourceManager.GetString("ErrorBufferReport_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve error report..
        /// </summary>
        internal static string ErrorBufferReport_FailedToRetrieve {
            get {
                return ResourceManager.GetString("ErrorBufferReport_FailedToRetrieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The on-device error report is:
        ///{0}.
        /// </summary>
        internal static string ErrorBufferReport_Format {
            get {
                return ResourceManager.GetString("ErrorBufferReport_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving the error report threw an exception..
        /// </summary>
        internal static string ErrorBufferReport_ThrewException {
            get {
                return ResourceManager.GetString("ErrorBufferReport_ThrewException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! was unable to decode the ROM. It may be corrupt..
        /// </summary>
        internal static string ErrorLog_DecodeLuigiErrorMessage {
            get {
                return ResourceManager.GetString("ErrorLog_DecodeLuigiErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory Version.
        /// </summary>
        internal static string FactoryFirmwareCommand_Name {
            get {
                return ResourceManager.GetString("FactoryFirmwareCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of firmware on the device as shipped. This will be the version of the firmware restored if you choose the Restore Firmware command..
        /// </summary>
        internal static string FactoryFirmwareCommand_TipDescription {
            get {
                return ResourceManager.GetString("FactoryFirmwareCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original Firmware Version.
        /// </summary>
        internal static string FactoryFirmwareCommand_TipTitle {
            get {
                return ResourceManager.GetString("FactoryFirmwareCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        internal static string File {
            get {
                return ResourceManager.GetString("File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file.
        /// </summary>
        internal static string FileInSentence {
            get {
                return ResourceManager.GetString("FileInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        internal static string Files {
            get {
                return ResourceManager.GetString("Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to files.
        /// </summary>
        internal static string FilesInSentence {
            get {
                return ResourceManager.GetString("FilesInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create {0} {1}..
        /// </summary>
        internal static string FileSystem_InconsistencyError_Creating_Format {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_Creating_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete {0} {1}..
        /// </summary>
        internal static string FileSystem_InconsistencyError_Deleting_Format {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_Deleting_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate file system entry of type &apos;{0}&apos; with file system identity &apos;{1}&apos;..
        /// </summary>
        internal static string FileSystem_InconsistencyError_Format {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system on the device may be in an inconsistent state. If the problem persists, back up your device and the local copy of the menu layout, reformat the device, and then update the files again..
        /// </summary>
        internal static string FileSystem_InconsistencyError_Message {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate file system entry of type &apos;{0}&apos;..
        /// </summary>
        internal static string FileSystem_InconsistencyError_MissingEntry_Format {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_MissingEntry_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system appears to be in an inconsistent state. However, further analysis is not possible at this time..
        /// </summary>
        internal static string FileSystem_InconsistencyError_NoFileSystem_Message {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_NoFileSystem_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to update {0} {1}..
        /// </summary>
        internal static string FileSystem_InconsistencyError_Updating_Format {
            get {
                return ResourceManager.GetString("FileSystem_InconsistencyError_Updating_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system on the LTO Flash! device may be in an inconsistent state..
        /// </summary>
        internal static string FileSystem_Inconsistent {
            get {
                return ResourceManager.GetString("FileSystem_Inconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File System Inconsistency!.
        /// </summary>
        internal static string FileSystem_Inconsistent_Title {
            get {
                return ResourceManager.GetString("FileSystem_Inconsistent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system operations that have been interrupted may have left the device in an unstable or unusable state.
        ///
        ///To resolve this problem, simply update the files again. This will remove unreachable file system entries and apply any other changes. If the problem persists, back up the contents of your LTO Flash!, reformat it, and try again..
        /// </summary>
        internal static string FileSystem_InconsistentEnd {
            get {
                return ResourceManager.GetString("FileSystem_InconsistentEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to complete update! The file system may be in an inconsistent state..
        /// </summary>
        internal static string FileSystem_InconsistentState {
            get {
                return ResourceManager.GetString("FileSystem_InconsistentState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected file type encountered in file system..
        /// </summary>
        internal static string FileSystem_InvalidFileType {
            get {
                return ResourceManager.GetString("FileSystem_InvalidFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One {0} cannot be reached..
        /// </summary>
        internal static string FileSystem_OrphanElement_Format {
            get {
                return ResourceManager.GetString("FileSystem_OrphanElement_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A total of {0} {1} cannot be reached..
        /// </summary>
        internal static string FileSystem_OrphanElements_Format {
            get {
                return ResourceManager.GetString("FileSystem_OrphanElements_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following problems were detected:.
        /// </summary>
        internal static string FileSystem_OrphanElements_Message {
            get {
                return ResourceManager.GetString("FileSystem_OrphanElements_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system cannot accommodate all of the ROMs, manuals, and save data files. To preserve save game information, you will need to reduce the number of ROMs and / or manuals you have specified in your menu layout..
        /// </summary>
        internal static string FileSystem_OutOfForksError {
            get {
                return ResourceManager.GetString("FileSystem_OutOfForksError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;No Device&gt;.
        /// </summary>
        internal static string FileSystem_Unknown {
            get {
                return ResourceManager.GetString("FileSystem_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0} item remained in the operation).
        /// </summary>
        internal static string FileSystem_UpdateInProgressFormat {
            get {
                return ResourceManager.GetString("FileSystem_UpdateInProgressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ({0} items remained in the operation).
        /// </summary>
        internal static string FileSystem_UpdateInProgressFormatPlural {
            get {
                return ResourceManager.GetString("FileSystem_UpdateInProgressFormatPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File System.
        /// </summary>
        internal static string FileSystemCommandGroup_Name {
            get {
                return ResourceManager.GetString("FileSystemCommandGroup_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory deletion is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingDirectoryDelete {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingDirectoryDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory update is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingDirectoryUpdate {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingDirectoryUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File deletion is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingFileDelete {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingFileDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File update is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingFileUpdate {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingFileUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File content creation is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingForkCreate {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingForkCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File content deletion is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingForkDelete {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingForkDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File data transfer to device was interrupted..
        /// </summary>
        internal static string FileSystemFlags_PendingForkUpload {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingForkUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File content validation is incomplete..
        /// </summary>
        internal static string FileSystemFlags_PendingForkValidate {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingForkValidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system reformat was interrupted while progress..
        /// </summary>
        internal static string FileSystemFlags_PendingReformat {
            get {
                return ResourceManager.GetString("FileSystemFlags_PendingReformat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks Available:.
        /// </summary>
        internal static string FileSystemStatisticsView_BlocksAvailable {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_BlocksAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clean Blocks:.
        /// </summary>
        internal static string FileSystemStatisticsView_BlocksClean {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_BlocksClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks In Use:.
        /// </summary>
        internal static string FileSystemStatisticsView_BlocksInUse {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_BlocksInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Blocks:.
        /// </summary>
        internal static string FileSystemStatisticsView_BlocksTotal {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_BlocksTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Version (Current):.
        /// </summary>
        internal static string FileSystemStatisticsView_FirmwareVersionCurrent {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_FirmwareVersionCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Version (Primary):.
        /// </summary>
        internal static string FileSystemStatisticsView_FirmwareVersionPrimary {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_FirmwareVersionPrimary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Version (Secondary):.
        /// </summary>
        internal static string FileSystemStatisticsView_FirmwareVersionSecondary {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_FirmwareVersionSecondary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flash Lifetime.
        /// </summary>
        internal static string FileSystemStatisticsView_FlashLifetimeHeader {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_FlashLifetimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sector Erasures (Metadata):.
        /// </summary>
        internal static string FileSystemStatisticsView_MetadataSectorErasures {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_MetadataSectorErasures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overall Flash Lifetime Remaining:.
        /// </summary>
        internal static string FileSystemStatisticsView_PercentRemaining {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PercentRemaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage due to Physical Sector Erasures:.
        /// </summary>
        internal static string FileSystemStatisticsView_PercentUsedByErasures {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PercentUsedByErasures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage due to File System Journal:.
        /// </summary>
        internal static string FileSystemStatisticsView_PercentUsedByJournal {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PercentUsedByJournal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blocks In Use/Dirty:.
        /// </summary>
        internal static string FileSystemStatisticsView_PhysicalBlocksInUse {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PhysicalBlocksInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Physical File System.
        /// </summary>
        internal static string FileSystemStatisticsView_PhysicalFileSystem {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PhysicalFileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sector Erasures (Physical):.
        /// </summary>
        internal static string FileSystemStatisticsView_PhysicalSectorErasures {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_PhysicalSectorErasures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unavailable&gt;.
        /// </summary>
        internal static string FileSystemStatisticsView_Unavailable {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_Unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --.--%.
        /// </summary>
        internal static string FileSystemStatisticsView_UnknownPercentage {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_UnknownPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1}.
        /// </summary>
        internal static string FileSystemStatisticsView_UsageFormat {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_UsageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Virtual File System.
        /// </summary>
        internal static string FileSystemStatisticsView_VirtualFileSystem {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_VirtualFileSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File System Journal Wrap Count:.
        /// </summary>
        internal static string FileSystemStatisticsView_VirtualToPhysicalMapVersion {
            get {
                return ResourceManager.GetString("FileSystemStatisticsView_VirtualToPhysicalMapVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware.
        /// </summary>
        internal static string Firmware_GroupHeader {
            get {
                return ResourceManager.GetString("Firmware_GroupHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Firmware Cancelled.
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_Cancelled_Title {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_Cancelled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware restore process was cancelled. No changes were made..
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_CancelledMesssage {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_CancelledMesssage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Firmware Complete.
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_Complete_Title {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_Complete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware was successfullly restored to version {0}..
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_CompleteMessageFormat {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_CompleteMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore to Factory Default....
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_MenuItemName {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        internal static string Firmware_RestoreFirmwareCommand_RibbonItemName {
            get {
                return ResourceManager.GetString("Firmware_RestoreFirmwareCommand_RibbonItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Firmware Cancelled.
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_Cancelled_Title {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_Cancelled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware update process was cancelled. No changes were made..
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_CancelledMessage {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_CancelledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Update Complete.
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_Complete_Title {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_Complete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware has been updated to version {0}..
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_CompleteMessageFormat {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_CompleteMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when updating device firmware. The error was:
        ///
        ///{0}
        ///
        ///Ensure that the device is securely connected to your computer..
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Update Firmware.
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_Failed_Title {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Firmware....
        /// </summary>
        internal static string Firmware_UpdateFirmwareCommand_MenuItemName {
            get {
                return ResourceManager.GetString("Firmware_UpdateFirmwareCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING! Restoring the firmware to its factory default removes the most recent firmware from the device! This may result in different behavior or loss of features.
        ///
        ///Are you certain you wish to proceed with this action?.
        /// </summary>
        internal static string FirmwareRestore_Message {
            get {
                return ResourceManager.GetString("FirmwareRestore_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Firmware to Factory Default.
        /// </summary>
        internal static string FirmwareRestore_Title {
            get {
                return ResourceManager.GetString("FirmwareRestore_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}{1}{2}.
        /// </summary>
        internal static string FirmwareRevision_ToStringFormat {
            get {
                return ResourceManager.GetString("FirmwareRevision_ToStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (secondary).
        /// </summary>
        internal static string FirmwareRevision_ToStringSecondarySuffix {
            get {
                return ResourceManager.GetString("FirmwareRevision_ToStringSecondarySuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +.
        /// </summary>
        internal static string FirmwareRevision_ToStringUnreleasedSuffix {
            get {
                return ResourceManager.GetString("FirmwareRevision_ToStringUnreleasedSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuing with this operation will downgrade the firmware from version {0} to version {1}. This may result in loss of functionality or an unusable device.
        ///
        ///Are you certain you wish to proceed with this action?.
        /// </summary>
        internal static string FirmwareUpdate_Downgrade_MessageFormat {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Downgrade_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downgrade Firmware.
        /// </summary>
        internal static string FirmwareUpdate_Downgrade_Title {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Downgrade_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! Firmware.
        /// </summary>
        internal static string FirmwareUpdate_FileType {
            get {
                return ResourceManager.GetString("FirmwareUpdate_FileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuing with this operation will upgrade the firmware from version {0} to version {1}.
        ///
        ///Are you certain you wish to proceed with this action?.
        /// </summary>
        internal static string FirmwareUpdate_MessageFormat {
            get {
                return ResourceManager.GetString("FirmwareUpdate_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a LTO Flash! Firmware Update.
        /// </summary>
        internal static string FirmwareUpdate_Prompt {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuing this operation will reapply version {0} of the firmware to the device.
        ///
        ///Are you certain you wish to proceed with this action?.
        /// </summary>
        internal static string FirmwareUpdate_Reapply_Message {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Reapply_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reapply Current Firmware.
        /// </summary>
        internal static string FirmwareUpdate_Reapply_Title {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Reapply_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} is the same as the factory installed version. No update will be applied..
        /// </summary>
        internal static string FirmwareUpdate_SameAsFactory_Message {
            get {
                return ResourceManager.GetString("FirmwareUpdate_SameAsFactory_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware Already Up-To-Date.
        /// </summary>
        internal static string FirmwareUpdate_SameAsFactory_Title {
            get {
                return ResourceManager.GetString("FirmwareUpdate_SameAsFactory_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} is the same as the factory installed version. Would you like to revert to the factory-installed firmware?.
        /// </summary>
        internal static string FirmwareUpdate_SameAsFactoryRestore_Message {
            get {
                return ResourceManager.GetString("FirmwareUpdate_SameAsFactoryRestore_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Files.
        /// </summary>
        internal static string FirmwareUpdate_SelectAllFilesFilter {
            get {
                return ResourceManager.GetString("FirmwareUpdate_SelectAllFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to open the release notes?.
        /// </summary>
        internal static string FirmwareUpdate_ShowReadmePrompt {
            get {
                return ResourceManager.GetString("FirmwareUpdate_ShowReadmePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply Firmware Update.
        /// </summary>
        internal static string FirmwareUpdate_Title {
            get {
                return ResourceManager.GetString("FirmwareUpdate_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A newer version of firmware for your LTO Flash! has been found!.
        /// </summary>
        internal static string FirmwareUpdateAvailable_MessagePrefix {
            get {
                return ResourceManager.GetString("FirmwareUpdateAvailable_MessagePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can disable the firmware upgrade check in LTO Flash! preferences..
        /// </summary>
        internal static string FirmwareUpdateAvailable_MessageSuffix {
            get {
                return ResourceManager.GetString("FirmwareUpdateAvailable_MessageSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current: {0}.
        /// </summary>
        internal static string FirmwareVersion_CurrentFormat {
            get {
                return ResourceManager.GetString("FirmwareVersion_CurrentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory: {0}.
        /// </summary>
        internal static string FirmwareVersion_FactoryFormat {
            get {
                return ResourceManager.GetString("FirmwareVersion_FactoryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fork.
        /// </summary>
        internal static string Fork {
            get {
                return ResourceManager.GetString("Fork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;None&gt;.
        /// </summary>
        internal static string Fork_NoFile {
            get {
                return ResourceManager.GetString("Fork_NoFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to fork.
        /// </summary>
        internal static string ForkInSentence {
            get {
                return ResourceManager.GetString("ForkInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forks.
        /// </summary>
        internal static string Forks {
            get {
                return ResourceManager.GetString("Forks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to forks.
        /// </summary>
        internal static string ForksInSentence {
            get {
                return ResourceManager.GetString("ForksInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Enumerate FTDI Driver Information.
        /// </summary>
        internal static string FtdiDriverIdentification_Error_Title {
            get {
                return ResourceManager.GetString("FtdiDriverIdentification_Error_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception execucting driver information query..
        /// </summary>
        internal static string FtdiDriverIdentification_ErrorMessage {
            get {
                return ResourceManager.GetString("FtdiDriverIdentification_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driver Version: {0}.
        /// </summary>
        internal static string FtdiDriverVersionCommand_Format {
            get {
                return ResourceManager.GetString("FtdiDriverVersionCommand_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driver Version.
        /// </summary>
        internal static string FtdiDriverVersionCommand_Name {
            get {
                return ResourceManager.GetString("FtdiDriverVersionCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the version of the FTDI Virtual COM Port driver last used to communicate with LTO Flash!.
        /// </summary>
        internal static string FtdiDriverVersionCommand_TipDescription {
            get {
                return ResourceManager.GetString("FtdiDriverVersionCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTDI Driver Version.
        /// </summary>
        internal static string FtdiDriverVersionCommand_TipTitle {
            get {
                return ResourceManager.GetString("FtdiDriverVersionCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unknown&gt;.
        /// </summary>
        internal static string FtdiDriverVersionUnknown {
            get {
                return ResourceManager.GetString("FtdiDriverVersionUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTDI Virtual COM Port Driver.
        /// </summary>
        internal static string FtdiGroupCommand_MenuItemName {
            get {
                return ResourceManager.GetString("FtdiGroupCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FTDI.
        /// </summary>
        internal static string FtdiGroupCommand_Name {
            get {
                return ResourceManager.GetString("FtdiGroupCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when downloading error information. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string GetErrorAndCrashLogs_Failed_Message_Format {
            get {
                return ResourceManager.GetString("GetErrorAndCrashLogs_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Download Error Information.
        /// </summary>
        internal static string GetErrorAndCrashLogs_Failed_Title {
            get {
                return ResourceManager.GetString("GetErrorAndCrashLogs_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when downloading the error log. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string GetErrorLogCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("GetErrorLogCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Retrieve Error Log.
        /// </summary>
        internal static string GetErrorLogCommand_Failed_Title {
            get {
                return ResourceManager.GetString("GetErrorLogCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when retrieving the file system status. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string GetFileSystemFlagsCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("GetFileSystemFlagsCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Get File System Status.
        /// </summary>
        internal static string GetFileSystemFlagsCommand_Failed_Title {
            get {
                return ResourceManager.GetString("GetFileSystemFlagsCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when retrieving the file system statistics. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string GetFileSystemStatisticsCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("GetFileSystemStatisticsCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Retrieve File System Statistics.
        /// </summary>
        internal static string GetFileSystemStatisticsCommand_Failed_Title {
            get {
                return ResourceManager.GetString("GetFileSystemStatisticsCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when retrieving device firmware information. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string GetFirmwareRevisionsCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("GetFirmwareRevisionsCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Retrieve Firmware Version.
        /// </summary>
        internal static string GetFirmwareRevisionsCommand_Failed_Title {
            get {
                return ResourceManager.GetString("GetFirmwareRevisionsCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visit FTDI Driver Download Page.
        /// </summary>
        internal static string GoToFTDIDriverPageCommand_Name {
            get {
                return ResourceManager.GetString("GoToFTDIDriverPageCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visit the driver download page for FTDI Virtual COM Port (VCP) drivers..
        /// </summary>
        internal static string GoToFTDIDriverPageCommand_TipDescription {
            get {
                return ResourceManager.GetString("GoToFTDIDriverPageCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore.
        /// </summary>
        internal static string Ignore {
            get {
                return ResourceManager.GetString("Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ROM at path &apos;{0}&apos; can only execute on the LTO Flash! device with ID &apos;{1}&apos;. The target device has ID &apos;{2}&apos;..
        /// </summary>
        internal static string IncompatibleRomException_MessageFormat {
            get {
                return ResourceManager.GetString("IncompatibleRomException_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Disabled {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will not attempt to disable the lockout feature that is part of the Intellivision II Master Component&apos;s EXEC ROM. Certain programs will not work when run on an Intellivision II Master Component..
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Disabled_ToolTipDescription {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Disabled_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Full {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will always attempt to disable the Intellivision II lockout feature. (Factory Default).
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Full_ToolTipDescription {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Full_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per Game.
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Limited {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Limited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! will attempt to disable the lockout feature only for programs known to be incompatible with the Intellivision II, which should allow them to run..
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_Limited_ToolTipDescription {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_Limited_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intellivision II Compatibility Fix: {0}.
        /// </summary>
        internal static string IntellivisionIICompatibilityMode_ToolTipTitleFormat {
            get {
                return ResourceManager.GetString("IntellivisionIICompatibilityMode_ToolTipTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch FTDI Driver Installer.
        /// </summary>
        internal static string LaunchFtdiDriverInstallerCommand_Name {
            get {
                return ResourceManager.GetString("LaunchFtdiDriverInstallerCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LTO Flash! User Interface is unable to locate the FTDI Virtual COM Port driver on your system. This driver is necessary to communicate with your LTO Flash!
        ///
        ///A copy of the driver installer has been included with the LTO Flash! User Interface, though it may not be the most recent release. To get the most recent driver, you can visit the FTDI  driver download page by choosing the following menu option:
        ///
        ///  {0}
        ///
        ///Would you like to launch the FTDI Virtual COM Port driver installer included with LTO Flash [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LaunchFtdiDriverInstallerCommand_NoDriverPromptMessageFormat {
            get {
                return ResourceManager.GetString("LaunchFtdiDriverInstallerCommand_NoDriverPromptMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you choose to proceed, the installer for the FTDI Virtual COM Port driver will be launched with elevated permissions. This driver is necessary to communicate with your LTO Flash!
        ///
        ///On most systems, this driver will automatically be installed the first time you connect your LTO Flash! to the computer. On Mac OS X and in some Windows 10 installations, this may not occur. If the LTO Flash! User Interface cannot detect your device, it&apos;s possible that direct installation of the driver is necessary.
        ///
        ///Would  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LaunchFtdiDriverInstallerCommand_PromptMessage {
            get {
                return ResourceManager.GetString("LaunchFtdiDriverInstallerCommand_PromptMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install FTDI VCP Driver.
        /// </summary>
        internal static string LaunchFtdiDriverInstallerCommand_PromptTitle {
            get {
                return ResourceManager.GetString("LaunchFtdiDriverInstallerCommand_PromptTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch the FTDI driver installer included with LTO Flash!. Note that this may not be the most recent version. Visit the FTDI website for the most current driver version..
        /// </summary>
        internal static string LaunchFtdiDriverInstallerCommand_TipDescription {
            get {
                return ResourceManager.GetString("LaunchFtdiDriverInstallerCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding.
        /// </summary>
        internal static string LfsOperation_Add {
            get {
                return ResourceManager.GetString("LfsOperation_Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting.
        /// </summary>
        internal static string LfsOperation_Remove {
            get {
                return ResourceManager.GetString("LfsOperation_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronizing.
        /// </summary>
        internal static string LfsOperation_Synchronize {
            get {
                return ResourceManager.GetString("LfsOperation_Synchronize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating.
        /// </summary>
        internal static string LfsOperation_Update {
            get {
                return ResourceManager.GetString("LfsOperation_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash!.
        /// </summary>
        internal static string LtoFlashCommandGroup_Name {
            get {
                return ResourceManager.GetString("LtoFlashCommandGroup_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred when preparing the ROM file &apos;{0} for deployment..
        /// </summary>
        internal static string LuigiFileError_Message_Format {
            get {
                return ResourceManager.GetString("LuigiFileError_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Preparing File for LTO Flash!.
        /// </summary>
        internal static string LuigiFileError_Title {
            get {
                return ResourceManager.GetString("LuigiFileError_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manual.
        /// </summary>
        internal static string ManualInSentence {
            get {
                return ResourceManager.GetString("ManualInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to manuals.
        /// </summary>
        internal static string ManualsInSentence {
            get {
                return ResourceManager.GetString("ManualsInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a color for the selected item.
        /// </summary>
        internal static string MenuLayout_ColorPickerTip {
            get {
                return ResourceManager.GetString("MenuLayout_ColorPickerTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory {0}.
        /// </summary>
        internal static string MenuLayout_DefaultDirectoryNameFormat {
            get {
                return ResourceManager.GetString("MenuLayout_DefaultDirectoryNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove {0}.
        /// </summary>
        internal static string MenuLayout_DeleteTipFormat {
            get {
                return ResourceManager.GetString("MenuLayout_DeleteTipFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contents of connected LTO Flash! and the Menu Layout do not match.
        /// </summary>
        internal static string MenuLayout_Device_NotInSync {
            get {
                return ResourceManager.GetString("MenuLayout_Device_NotInSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flash Storage Used: {0:0.00}/{1} MB.
        /// </summary>
        internal static string MenuLayout_EstimatedUsageMBFormat {
            get {
                return ResourceManager.GetString("MenuLayout_EstimatedUsageMBFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1} Items.
        /// </summary>
        internal static string MenuLayout_FolderStatusMessageFormat {
            get {
                return ResourceManager.GetString("MenuLayout_FolderStatusMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires LTO Flash! with device ID &apos;{0}&apos;.
        /// </summary>
        internal static string MenuLayout_IncompatibleDevice_Tip_Format {
            get {
                return ResourceManager.GetString("MenuLayout_IncompatibleDevice_Tip_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This ROM will not be copied because it requires LTO Flash! with device ID &apos;{0}&apos;.
        /// </summary>
        internal static string MenuLayout_IncompatibleDeviceNotCopied_Tip_Format {
            get {
                return ResourceManager.GetString("MenuLayout_IncompatibleDeviceNotCopied_Tip_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Backup.
        /// </summary>
        internal static string MenuLayout_LoadFailed_BackupButton_Text {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_BackupButton_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save backup copy of menu layout..
        /// </summary>
        internal static string MenuLayout_LoadFailed_BackupFailed {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_BackupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save backup copy of the menu layout. Error:
        ///
        ///{0}.
        /// </summary>
        internal static string MenuLayout_LoadFailed_BackupFailed_Message_Format {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_BackupFailed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backup copy of the menu layout can be found here:
        ///{0}
        ///
        ///Full error report:
        ///{1}.
        /// </summary>
        internal static string MenuLayout_LoadFailed_Error_Format {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when loading the menu layout file. A backup copy will be created at the location indicated below..
        /// </summary>
        internal static string MenuLayout_LoadFailed_Message {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Load Menu Layout.
        /// </summary>
        internal static string MenuLayout_LoadFailed_Title {
            get {
                return ResourceManager.GetString("MenuLayout_LoadFailed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Long Name.
        /// </summary>
        internal static string MenuLayout_LongNameColumnHeader {
            get {
                return ResourceManager.GetString("MenuLayout_LongNameColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Name (up to 64 characters).
        /// </summary>
        internal static string MenuLayout_LongNameTip {
            get {
                return ResourceManager.GetString("MenuLayout_LongNameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual / Directory Info.
        /// </summary>
        internal static string MenuLayout_ManualColumnHeader {
            get {
                return ResourceManager.GetString("MenuLayout_ManualColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag or browse for a manual for this program.
        /// </summary>
        internal static string MenuLayout_ManualTip {
            get {
                return ResourceManager.GetString("MenuLayout_ManualTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This item is missing; cached data may be used if available.
        /// </summary>
        internal static string MenuLayout_MissingItem_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_MissingItem_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This ROM cannot be found at its original location; if possible, a backup copy will be used.
        /// </summary>
        internal static string MenuLayout_MissingRomTip {
            get {
                return ResourceManager.GetString("MenuLayout_MissingRomTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ROM on the device is different than the ROM in the ROM list.
        /// </summary>
        internal static string MenuLayout_ModifiedRomTip {
            get {
                return ResourceManager.GetString("MenuLayout_ModifiedRomTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Directory.
        /// </summary>
        internal static string MenuLayout_NewDirectoryTip {
            get {
                return ResourceManager.GetString("MenuLayout_NewDirectoryTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Items in Menu.
        /// </summary>
        internal static string MenuLayout_NoItems {
            get {
                return ResourceManager.GetString("MenuLayout_NoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files Used: {0}/{1}.
        /// </summary>
        internal static string MenuLayout_RemainingFilesFormat {
            get {
                return ResourceManager.GetString("MenuLayout_RemainingFilesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directories Used: {0}/{1}.
        /// </summary>
        internal static string MenuLayout_RemainingFoldersFormat {
            get {
                return ResourceManager.GetString("MenuLayout_RemainingFoldersFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forks Used: {0}/{1}.
        /// </summary>
        internal static string MenuLayout_RemainingForksFormat {
            get {
                return ResourceManager.GetString("MenuLayout_RemainingForksFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Manual (file remains on disk).
        /// </summary>
        internal static string MenuLayout_RemoveManualTip {
            get {
                return ResourceManager.GetString("MenuLayout_RemoveManualTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runs on the connected LTO Flash!.
        /// </summary>
        internal static string MenuLayout_RequiredPeripheralAttached_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_RequiredPeripheralAttached_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only runs on LTO Flash!.
        /// </summary>
        internal static string MenuLayout_RequiredPeripheralNotAttached_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_RequiredPeripheralNotAttached_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Data.
        /// </summary>
        internal static string MenuLayout_SaveDataColumnHeader {
            get {
                return ResourceManager.GetString("MenuLayout_SaveDataColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag or browse for a save data file for this program.
        /// </summary>
        internal static string MenuLayout_SaveDataTip {
            get {
                return ResourceManager.GetString("MenuLayout_SaveDataTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Manual.
        /// </summary>
        internal static string MenuLayout_SetManualTip {
            get {
                return ResourceManager.GetString("MenuLayout_SetManualTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short Name.
        /// </summary>
        internal static string MenuLayout_ShortNameColumnHeader {
            get {
                return ResourceManager.GetString("MenuLayout_ShortNameColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short Name (up to 18 characters).
        /// </summary>
        internal static string MenuLayout_ShortNameTip {
            get {
                return ResourceManager.GetString("MenuLayout_ShortNameTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage Used:.
        /// </summary>
        internal static string MenuLayout_StorageUsed {
            get {
                return ResourceManager.GetString("MenuLayout_StorageUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Layout.
        /// </summary>
        internal static string MenuLayout_Title {
            get {
                return ResourceManager.GetString("MenuLayout_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requires LTO Flash! with device ID &apos;{0}&apos;, which has not been connected to this computer.
        /// </summary>
        internal static string MenuLayout_UnknownDevice_Tip_Format {
            get {
                return ResourceManager.GetString("MenuLayout_UnknownDevice_Tip_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory will be added.
        /// </summary>
        internal static string MenuLayout_WillAddDirectory_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillAddDirectory_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file will be added.
        /// </summary>
        internal static string MenuLayout_WillAddFile_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillAddFile_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory will be removed.
        /// </summary>
        internal static string MenuLayout_WillDeleteDirectory_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillDeleteDirectory_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file will be removed.
        /// </summary>
        internal static string MenuLayout_WillDeleteFile_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillDeleteFile_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory will be updated.
        /// </summary>
        internal static string MenuLayout_WillUpdateDirectory_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillUpdateDirectory_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file will be updated.
        /// </summary>
        internal static string MenuLayout_WillUpdateFile_Tip {
            get {
                return ResourceManager.GetString("MenuLayout_WillUpdateFile_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Directory.
        /// </summary>
        internal static string NewDirectoryCommand_Name {
            get {
                return ResourceManager.GetString("NewDirectoryCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a new directory, which can contain more subdirectories or files (ROMs, manuals, etc.).
        /// </summary>
        internal static string NewDirectoryCommand_ToolTipDescription {
            get {
                return ResourceManager.GetString("NewDirectoryCommand_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create New Directory.
        /// </summary>
        internal static string NewDirectoryCommand_ToolTipTitle {
            get {
                return ResourceManager.GetString("NewDirectoryCommand_ToolTipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;No Device&gt;.
        /// </summary>
        internal static string NoDevice {
            get {
                return ResourceManager.GetString("NoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Device Backups Folder.
        /// </summary>
        internal static string OpenDeviceBackupsDirectoryCommand_Name {
            get {
                return ResourceManager.GetString("OpenDeviceBackupsDirectoryCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the folder containing backups made for the currently connected LTO Flash! device..
        /// </summary>
        internal static string OpenDeviceBackupsDirectoryCommand_TipDescription {
            get {
                return ResourceManager.GetString("OpenDeviceBackupsDirectoryCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Error Logs Folder.
        /// </summary>
        internal static string OpenErrorLogsDirectoryCommand_Name {
            get {
                return ResourceManager.GetString("OpenErrorLogsDirectoryCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the file system folder containing error logs..
        /// </summary>
        internal static string OpenErrorLogsDirectoryCommand_TipDescription {
            get {
                return ResourceManager.GetString("OpenErrorLogsDirectoryCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Manual.
        /// </summary>
        internal static string OpenManualCommand_Name {
            get {
                return ResourceManager.GetString("OpenManualCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the manual for viewing..
        /// </summary>
        internal static string OpenManualCommand_ToolTip {
            get {
                return ResourceManager.GetString("OpenManualCommand_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Menu Layout Backups Folder.
        /// </summary>
        internal static string OpenMenuLayoutBackupsDirectoryCommand_Name {
            get {
                return ResourceManager.GetString("OpenMenuLayoutBackupsDirectoryCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the folder containing Menu Layout and ROM list backups..
        /// </summary>
        internal static string OpenMenuLayoutBackupsDirectoryCommand_TipDescription {
            get {
                return ResourceManager.GetString("OpenMenuLayoutBackupsDirectoryCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred creating the cached ROM for {0}..
        /// </summary>
        internal static string PrepareForDeployment_ErrorCreatingCacheEntryFormat {
            get {
                return ResourceManager.GetString("PrepareForDeployment_ErrorCreatingCacheEntryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to present.
        /// </summary>
        internal static string ProgramFork_Present {
            get {
                return ResourceManager.GetString("ProgramFork_Present", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to program.
        /// </summary>
        internal static string ProgramInSentence {
            get {
                return ResourceManager.GetString("ProgramInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to programs.
        /// </summary>
        internal static string ProgramsInSentence {
            get {
                return ResourceManager.GetString("ProgramsInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not ask again.
        /// </summary>
        internal static string PromptToAddMenuItems_DoNotAskAgain {
            get {
                return ResourceManager.GetString("PromptToAddMenuItems_DoNotAskAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to have new menu items in your LTO Flash! menu layout created for all ROMs added to the list?
        ///
        ///Items will be added to the top-level folder in the menu layout. Folders containing ROMs will be reflected as folders in the menu layout as well..
        /// </summary>
        internal static string PromptToAddMenuItems_Message {
            get {
                return ResourceManager.GetString("PromptToAddMenuItems_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Menu Items for New ROMs.
        /// </summary>
        internal static string PromptToAddMenuItems_Title {
            get {
                return ResourceManager.GetString("PromptToAddMenuItems_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! includes a few ROMs to get you started!
        ///
        ///If you choose not to import them at this time, you can add them from the following location later:
        ///
        ///  {0}
        ///
        ///Would you like to add these ROMs now?.
        /// </summary>
        internal static string PromptToAddStarterRoms_MessageFormat {
            get {
                return ResourceManager.GetString("PromptToAddStarterRoms_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Starter Roms.
        /// </summary>
        internal static string PromptToAddStarterRoms_Title {
            get {
                return ResourceManager.GetString("PromptToAddStarterRoms_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No (Do not ask again).
        /// </summary>
        internal static string PromptToInstallFtdiDriver_DoNotAskAgain {
            get {
                return ResourceManager.GetString("PromptToInstallFtdiDriver_DoNotAskAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string PromptToInstallFtdiDriver_No {
            get {
                return ResourceManager.GetString("PromptToInstallFtdiDriver_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string PromptToInstallFtdiDriver_Yes {
            get {
                return ResourceManager.GetString("PromptToInstallFtdiDriver_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command {0} is either unrecognized or unavailable..
        /// </summary>
        internal static string ProtocolCommand_UnexpectedCommandError_Format {
            get {
                return ResourceManager.GetString("ProtocolCommand_UnexpectedCommandError_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update hardware status flags..
        /// </summary>
        internal static string ProtocolCommandId_DebugSetHardwareStatus_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DebugSetHardwareStatus_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructing Simulator to Set Hardware Status....
        /// </summary>
        internal static string ProtocolCommandId_DebugSetHardwareStatus_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DebugSetHardwareStatus_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set random drop connection command..
        /// </summary>
        internal static string ProtocolCommandId_DebugSetRandomDropConnection_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DebugSetRandomDropConnection_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructing Simulator to Drop Connection....
        /// </summary>
        internal static string ProtocolCommandId_DebugSetRandomDropConnection_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DebugSetRandomDropConnection_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decode LUIGI data from file system fork..
        /// </summary>
        internal static string ProtocolCommandId_DecodeLuigiFromFork_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DecodeLuigiFromFork_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decoding LUIGI from fork....
        /// </summary>
        internal static string ProtocolCommandId_DecodeLuigiFromFork_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DecodeLuigiFromFork_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load and start program..
        /// </summary>
        internal static string ProtocolCommandId_DownloadAndPlay_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadAndPlay_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Program to Launch....
        /// </summary>
        internal static string ProtocolCommandId_DownloadAndPlay_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadAndPlay_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download the crash log..
        /// </summary>
        internal static string ProtocolCommandId_DownloadCrashLog_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadCrashLog_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading crash log....
        /// </summary>
        internal static string ProtocolCommandId_DownloadCrashLog_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadCrashLog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve error log..
        /// </summary>
        internal static string ProtocolCommandId_DownloadErrorLog_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadErrorLog_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving error log from device....
        /// </summary>
        internal static string ProtocolCommandId_DownloadErrorLog_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_DownloadErrorLog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to erase crash log..
        /// </summary>
        internal static string ProtocolCommandId_EraseCrashLog_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_EraseCrashLog_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erasing crash log....
        /// </summary>
        internal static string ProtocolCommandId_EraseCrashLog_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_EraseCrashLog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to restore factory firmware..
        /// </summary>
        internal static string ProtocolCommandId_FirmwareEraseSecondary_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareEraseSecondary_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restoring Factory Firmware....
        /// </summary>
        internal static string ProtocolCommandId_FirmwareEraseSecondary_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareEraseSecondary_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve firmware versions..
        /// </summary>
        internal static string ProtocolCommandId_FirmwareGetRevisions_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareGetRevisions_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Querying Firmware Versions....
        /// </summary>
        internal static string ProtocolCommandId_FirmwareGetRevisions_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareGetRevisions_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to program firmware update..
        /// </summary>
        internal static string ProtocolCommandId_FirmwareProgramSecondary_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareProgramSecondary_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Programming new firmware....
        /// </summary>
        internal static string ProtocolCommandId_FirmwareProgramSecondary_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareProgramSecondary_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware image validation failed. {0}.
        /// </summary>
        internal static string ProtocolCommandId_FirmwareValidateImageInRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareValidateImageInRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating Firmware Upload....
        /// </summary>
        internal static string ProtocolCommandId_FirmwareValidateImageInRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_FirmwareValidateImageInRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to issue garbage collection command..
        /// </summary>
        internal static string ProtocolCommandId_GarbageCollect_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_GarbageCollect_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maintaining File System....
        /// </summary>
        internal static string ProtocolCommandId_GarbageCollect_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_GarbageCollect_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checksum of data block in device RAM failed..
        /// </summary>
        internal static string ProtocolCommandId_LfsChecksumDataBlockInRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsChecksumDataBlockInRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying Data in Device RAM....
        /// </summary>
        internal static string ProtocolCommandId_LfsChecksumDataBlockInRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsChecksumDataBlockInRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy fork into device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsCopyForkToRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsCopyForkToRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading File Fork Data into Device RAM....
        /// </summary>
        internal static string ProtocolCommandId_LfsCopyForkToRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsCopyForkToRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create fork from device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsCreateForkFromRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsCreateForkFromRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating File Fork from Data in RAM....
        /// </summary>
        internal static string ProtocolCommandId_LfsCreateForkFromRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsCreateForkFromRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete directory..
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteDirectory_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteDirectory_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting Directory....
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteDirectory_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteDirectory_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete file..
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteFile_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteFile_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting File....
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteFile_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteFile_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete fork..
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteFork_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteFork_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting Fork....
        /// </summary>
        internal static string ProtocolCommandId_LfsDeleteFork_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDeleteFork_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to download data block from device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsDownloadDataBlockFromRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDownloadDataBlockFromRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading Data from Device RAM....
        /// </summary>
        internal static string ProtocolCommandId_LfsDownloadDataBlockFromRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDownloadDataBlockFromRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve file system..
        /// </summary>
        internal static string ProtocolCommandId_LfsDownloadGlobalTables_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDownloadGlobalTables_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving File System Layout....
        /// </summary>
        internal static string ProtocolCommandId_LfsDownloadGlobalTables_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsDownloadGlobalTables_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve file system status flags..
        /// </summary>
        internal static string ProtocolCommandId_LfsGetFileSystemStatusFlags_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsGetFileSystemStatusFlags_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving File System Status....
        /// </summary>
        internal static string ProtocolCommandId_LfsGetFileSystemStatusFlags_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsGetFileSystemStatusFlags_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve file system usage information..
        /// </summary>
        internal static string ProtocolCommandId_LfsGetStatistics_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsGetStatistics_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving File System Usage Information....
        /// </summary>
        internal static string ProtocolCommandId_LfsGetStatistics_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsGetStatistics_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reformat the file system..
        /// </summary>
        internal static string ProtocolCommandId_LfsReformatFileSystem_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsReformatFileSystem_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformatting File System....
        /// </summary>
        internal static string ProtocolCommandId_LfsReformatFileSystem_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsReformatFileSystem_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update file systems status flags..
        /// </summary>
        internal static string ProtocolCommandId_LfsSetFileSystemStatusFlags_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsSetFileSystemStatusFlags_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating File System Status....
        /// </summary>
        internal static string ProtocolCommandId_LfsSetFileSystemStatusFlags_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsSetFileSystemStatusFlags_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update fork&apos;s unique ID..
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateForkUid_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateForkUid_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating File Fork Identifier....
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateForkUid_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateForkUid_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update global directory table from device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateGdtFromRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateGdtFromRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Directories....
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateGdtFromRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateGdtFromRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update global file table from device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateGftFromRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateGftFromRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Files....
        /// </summary>
        internal static string ProtocolCommandId_LfsUpdateGftFromRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUpdateGftFromRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to upload data block to device RAM..
        /// </summary>
        internal static string ProtocolCommandId_LfsUploadDataBlockToRam_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUploadDataBlockToRam_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading Data to Device RAM....
        /// </summary>
        internal static string ProtocolCommandId_LfsUploadDataBlockToRam_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_LfsUploadDataBlockToRam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batch command execution failed..
        /// </summary>
        internal static string ProtocolCommandId_MultistagePseudoCommand_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_MultistagePseudoCommand_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing Batched Commands....
        /// </summary>
        internal static string ProtocolCommandId_MultistagePseudoCommand_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_MultistagePseudoCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to ping device..
        /// </summary>
        internal static string ProtocolCommandId_Ping_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_Ping_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pinging Device....
        /// </summary>
        internal static string ProtocolCommandId_Ping_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_Ping_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update device configuration..
        /// </summary>
        internal static string ProtocolCommandId_SetConfiguration_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_SetConfiguration_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Device Cconfiguration....
        /// </summary>
        internal static string ProtocolCommandId_SetConfiguration_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_SetConfiguration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to execute an unknown or unrecognized command..
        /// </summary>
        internal static string ProtocolCommandId_UnknownCommand_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_UnknownCommand_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing Unknown Command....
        /// </summary>
        internal static string ProtocolCommandId_UnknownCommand_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_UnknownCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to receive device beacon..
        /// </summary>
        internal static string ProtocolCommandId_WaitForBeaconPseudoCommand_Failed {
            get {
                return ResourceManager.GetString("ProtocolCommandId_WaitForBeaconPseudoCommand_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for Device Response....
        /// </summary>
        internal static string ProtocolCommandId_WaitForBeaconPseudoCommand_Title {
            get {
                return ResourceManager.GetString("ProtocolCommandId_WaitForBeaconPseudoCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The readme file &quot;{0}&quot; could not be found!.
        /// </summary>
        internal static string ReadmeCommand_ErrorMessageFormat {
            get {
                return ResourceManager.GetString("ReadmeCommand_ErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing {0}.
        /// </summary>
        internal static string ReadmeCommand_ErrorMessageTitleFormat {
            get {
                return ResourceManager.GetString("ReadmeCommand_ErrorMessageTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! Release Notes.
        /// </summary>
        internal static string ReadmeCommand_Name {
            get {
                return ResourceManager.GetString("ReadmeCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING! Reformatting the LTO Flash! file system removes all content from the device! All ROMs, manuals, saved game state, and other content will be lost!
        ///
        ///Are you certain you wish to proceed with this action?.
        /// </summary>
        internal static string Reformat_Message {
            get {
                return ResourceManager.GetString("Reformat_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash! file system reformat has completed successfully..
        /// </summary>
        internal static string Reformat_SucceededMessage {
            get {
                return ResourceManager.GetString("Reformat_SucceededMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformat File System.
        /// </summary>
        internal static string Reformat_Title {
            get {
                return ResourceManager.GetString("Reformat_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reformat the device. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string ReformatCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("ReformatCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformat Failed!.
        /// </summary>
        internal static string ReformatCommand_Failed_Title {
            get {
                return ResourceManager.GetString("ReformatCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformat File System....
        /// </summary>
        internal static string ReformatCommand_MenuItemName {
            get {
                return ResourceManager.GetString("ReformatCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformat.
        /// </summary>
        internal static string ReformatCommand_Name {
            get {
                return ResourceManager.GetString("ReformatCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reformats the file system on the LTO Flash! ALL DATA WILL BE LOST!.
        /// </summary>
        internal static string ReformatCommand_Tip {
            get {
                return ResourceManager.GetString("ReformatCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Menu.
        /// </summary>
        internal static string RemoveFromMenuCommand_MenuItemName {
            get {
                return ResourceManager.GetString("RemoveFromMenuCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from menu.
        /// </summary>
        internal static string RemoveFromMenuCommand_Name {
            get {
                return ResourceManager.GetString("RemoveFromMenuCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected item.
        /// </summary>
        internal static string RemoveFromMenuCommand_TipDescription {
            get {
                return ResourceManager.GetString("RemoveFromMenuCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Menu.
        /// </summary>
        internal static string RemoveFromMenuCommand_TipTitle {
            get {
                return ResourceManager.GetString("RemoveFromMenuCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove selected item from the menu layout..
        /// </summary>
        internal static string RemoveFromMenuCommand_ToolTipDescription {
            get {
                return ResourceManager.GetString("RemoveFromMenuCommand_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Manual.
        /// </summary>
        internal static string RemoveManualCommand_Name {
            get {
                return ResourceManager.GetString("RemoveManualCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Save Data.
        /// </summary>
        internal static string RemoveSaveDataCommand_Name {
            get {
                return ResourceManager.GetString("RemoveSaveDataCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Save Data (file remains on disk).
        /// </summary>
        internal static string RemoveSaveDataCommand_Tip {
            get {
                return ResourceManager.GetString("RemoveSaveDataCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following items were not restored in the cache index:.
        /// </summary>
        internal static string RestoreCacheIndex_ErrorMessage {
            get {
                return ResourceManager.GetString("RestoreCacheIndex_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Restoring Cache Index.
        /// </summary>
        internal static string RestoreCacheIndex_ErrorTitle {
            get {
                return ResourceManager.GetString("RestoreCacheIndex_ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to reconstruct: {0}.
        /// </summary>
        internal static string RestoreCacheIndex_FailedToReconstructFormat {
            get {
                return ResourceManager.GetString("RestoreCacheIndex_FailedToReconstructFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory:
        ///
        ///  {0}
        ///
        ///could not be found..
        /// </summary>
        internal static string RestoreCommand_BackupNotFound_ErrorFormat {
            get {
                return ResourceManager.GetString("RestoreCommand_BackupNotFound_ErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Restore Point.
        /// </summary>
        internal static string RestoreCommand_BackupNotFound_ErrorTitle {
            get {
                return ResourceManager.GetString("RestoreCommand_BackupNotFound_ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore operation was cancelled! Note that the contents of your LTO Flash! may be in an inconsistent state. You should either resume the backup, or copy your current files back to your device..
        /// </summary>
        internal static string RestoreCommand_CancelledMessage {
            get {
                return ResourceManager.GetString("RestoreCommand_CancelledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Cancelled.
        /// </summary>
        internal static string RestoreCommand_CancelledTitle {
            get {
                return ResourceManager.GetString("RestoreCommand_CancelledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore operation succeeded..
        /// </summary>
        internal static string RestoreCommand_CompleteMessage {
            get {
                return ResourceManager.GetString("RestoreCommand_CompleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Complete.
        /// </summary>
        internal static string RestoreCommand_CompleteTitle {
            get {
                return ResourceManager.GetString("RestoreCommand_CompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        internal static string RestoreCommand_Dialog_Title {
            get {
                return ResourceManager.GetString("RestoreCommand_Dialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Failed.
        /// </summary>
        internal static string RestoreCommand_FailedTitle {
            get {
                return ResourceManager.GetString("RestoreCommand_FailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore File System....
        /// </summary>
        internal static string RestoreCommand_MenuItemName {
            get {
                return ResourceManager.GetString("RestoreCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        internal static string RestoreCommand_Name {
            get {
                return ResourceManager.GetString("RestoreCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore contents of your LTO Flash! from a previous backup.
        /// </summary>
        internal static string RestoreCommand_Tip {
            get {
                return ResourceManager.GetString("RestoreCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING! Restore from Backup will replace the contents of your LTO Flash!
        ///
        ///Would you like to proceed?.
        /// </summary>
        internal static string RestoreCommand_WarningMessage {
            get {
                return ResourceManager.GetString("RestoreCommand_WarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when reverting to the factory-installed firmware. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string RestoreFirmwareCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("RestoreFirmwareCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Restore Firmware.
        /// </summary>
        internal static string RestoreFirmwareCommand_Failed_Title {
            get {
                return ResourceManager.GetString("RestoreFirmwareCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore the LTO Flash! firmware to its factory default.
        /// </summary>
        internal static string RestoreFirmwareCommand_TipDescription {
            get {
                return ResourceManager.GetString("RestoreFirmwareCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred restoring the menu layout..
        /// </summary>
        internal static string RestoreMenuLayoutCommand_ErrorMessage {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Menu Layout....
        /// </summary>
        internal static string RestoreMenuLayoutCommand_MenuItemName {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following required backup files could not be found in the backup directory:.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_MissingFilesErrorMessage {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_MissingFilesErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to Restore Menu Layout.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_MissingFilesErrorTitle {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_MissingFilesErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Menu Layout.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_Name {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select LTO Flash! File System Backup.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_SelectBackupTitle {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_SelectBackupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces the current Menu Layout and ROM list with versions from a backup copy..
        /// </summary>
        internal static string RestoreMenuLayoutCommand_TipDescription {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detailed Information:.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_WarningDetailHeader {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_WarningDetailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING!
        ///
        ///Restoring a Menu Layout from a backup will replace your current Menu Layout and ROM list! If you have moved or deleted ROMs since creating the backup, you may encounter errors.
        ///
        ///This will NOT affect the menu on your LTO Flash!.
        ///
        ///Would you like to continue with the restore operation?.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_WarningMessage {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_WarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File: {0}\nMessage: {1}.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_WarningMessageDetailFormat {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_WarningMessageDetailFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Although the restore operation succeeded, issues were found. The available information is presented below..
        /// </summary>
        internal static string RestoreMenuLayoutCommand_WarningsHeader {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_WarningsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore Menu Layout.
        /// </summary>
        internal static string RestoreMenuLayoutCommand_WarningTitle {
            get {
                return ResourceManager.GetString("RestoreMenuLayoutCommand_WarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem has occurred when downloading the file system tables. The error was:
        ///
        ///{0}
        ///
        ///This may occur if LTO Flash! is connected to your computer and a powered-on Intellivision simultaneously.
        ///
        ///To avoid this problem, turn off your console. If the problem persists, also disconnect your LTO Flash! from your computer and reconnect it..
        /// </summary>
        internal static string RetrieveFileSystemCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("RetrieveFileSystemCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to Download File System Tables.
        /// </summary>
        internal static string RetrieveFileSystemCommand_Failed_Title {
            get {
                return ResourceManager.GetString("RetrieveFileSystemCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The required ROM conversion utility could not be found..
        /// </summary>
        internal static string RomToLuigiFailed_ConversionToolNotFound_Error_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_ConversionToolNotFound_Error_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to prepare ROM for LTO Flash! The necessary utility could not be found at location: {0}.
        /// </summary>
        internal static string RomToLuigiFailed_ConversionToolNotFound_Error_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_ConversionToolNotFound_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred invoking the conversion program: &apos;{0}&apos;.
        /// </summary>
        internal static string RomToLuigiFailed_Error_Description_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_Error_Description_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid operation occurred..
        /// </summary>
        internal static string RomToLuigiFailed_InvalidOperation_Error_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_InvalidOperation_Error_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing ROM for LTO Flash! failed with error code: {0}..
        /// </summary>
        internal static string RomToLuigiFailed_InvalidOperation_Error_Message_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_InvalidOperation_Error_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to prepare ROM for deployment. The path &apos;{0}&apos; either does not exist, or is otherwise invalid..
        /// </summary>
        internal static string RomToLuigiFailed_InvalidOutputFileFormat {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_InvalidOutputFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred trying to read or write a file..
        /// </summary>
        internal static string RomToLuigiFailed_IOException_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_IOException_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output of the conversion cannot be found..
        /// </summary>
        internal static string RomToLuigiFailed_OutputFileNotFound_Error_Description_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_OutputFileNotFound_Error_Description_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing ROM for LTO Flash! failed for file: {0}. Expected output file not found: {1}.
        /// </summary>
        internal static string RomToLuigiFailed_OutputFileNotFound_Error_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_OutputFileNotFound_Error_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path was too long..
        /// </summary>
        internal static string RomToLuigiFailed_PathTooLong_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_PathTooLong_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ROM was successfully prepared for deployment, but it is too large..
        /// </summary>
        internal static string RomToLuigiFailed_TooLarge_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_TooLarge_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output of the ROM conversion tool is too large to deploy to LTO Flash! You can find the output file at:
        ///
        ///{0}.
        /// </summary>
        internal static string RomToLuigiFailed_TooLarge_Error_Message_Format {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_TooLarge_Error_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system denied access to necessary files..
        /// </summary>
        internal static string RomToLuigiFailed_UnauthorizedAccess_Error_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_UnauthorizedAccess_Error_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred when preparing the ROM for deployment..
        /// </summary>
        internal static string RomToLuigiFailed_Unexpected_Error_Description {
            get {
                return ResourceManager.GetString("RomToLuigiFailed_Unexpected_Error_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to save data file.
        /// </summary>
        internal static string SaveDataFileInSentence {
            get {
                return ResourceManager.GetString("SaveDataFileInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to save data files.
        /// </summary>
        internal static string SaveDataFilesInSentence {
            get {
                return ResourceManager.GetString("SaveDataFilesInSentence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when saving the menu layout. The menu may not load correctly in the future. Would you like to restore the menu to its previous state? (Close to decline.).
        /// </summary>
        internal static string SaveMenuError_Message {
            get {
                return ResourceManager.GetString("SaveMenuError_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Saving Menu Layout.
        /// </summary>
        internal static string SaveMenuError_Title {
            get {
                return ResourceManager.GetString("SaveMenuError_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        internal static string SaveMenuPosition_Always {
            get {
                return ResourceManager.GetString("SaveMenuPosition_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last selected menu location is always saved. After a reset or power up, LTO Flash! will resume at the location in the menu you were last visiting..
        /// </summary>
        internal static string SaveMenuPosition_Always_ToolTipDescription {
            get {
                return ResourceManager.GetString("SaveMenuPosition_Always_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string SaveMenuPosition_Never {
            get {
                return ResourceManager.GetString("SaveMenuPosition_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last selected menu location is never saved. After reset or power up, LTO Flash! will always start at the root menu..
        /// </summary>
        internal static string SaveMenuPosition_Never_ToolTipDescription {
            get {
                return ResourceManager.GetString("SaveMenuPosition_Never_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only During Session.
        /// </summary>
        internal static string SaveMenuPosition_SessionOnly {
            get {
                return ResourceManager.GetString("SaveMenuPosition_SessionOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The last selected menu location will be saved when you reset your Intellivision. When you turn off the power to your console, the next time you use your LTO Flash! will start at the root menu. (Factory Default).
        /// </summary>
        internal static string SaveMenuPosition_SessionOnly_ToolTipDescription {
            get {
                return ResourceManager.GetString("SaveMenuPosition_SessionOnly_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save LTO Flash! Menu Position: {0}.
        /// </summary>
        internal static string SaveMenuPosition_ToolTipTitleFormat {
            get {
                return ResourceManager.GetString("SaveMenuPosition_ToolTipTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find LTO Flash! Devices.
        /// </summary>
        internal static string SearchForDevicesCommand_MenuItemName {
            get {
                return ResourceManager.GetString("SearchForDevicesCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find Devices.
        /// </summary>
        internal static string SearchForDevicesCommand_Name {
            get {
                return ResourceManager.GetString("SearchForDevicesCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identify LTO Flash! devices connected to the system..
        /// </summary>
        internal static string SearchForDevicesCommand_TipDescription {
            get {
                return ResourceManager.GetString("SearchForDevicesCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Version.
        /// </summary>
        internal static string SecondaryFirmwareCommand_Name {
            get {
                return ResourceManager.GetString("SecondaryFirmwareCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of firmware on the device installed as an update. If an update is installed, the current version should be the same as this one..
        /// </summary>
        internal static string SecondaryFirmwareCommand_TipDescription {
            get {
                return ResourceManager.GetString("SecondaryFirmwareCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated Firmware Version.
        /// </summary>
        internal static string SecondaryFirmwareCommand_TipTitle {
            get {
                return ResourceManager.GetString("SecondaryFirmwareCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date.
        /// </summary>
        internal static string SelectBackupDialog_DateColumnTitle {
            get {
                return ResourceManager.GetString("SelectBackupDialog_DateColumnTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Items.
        /// </summary>
        internal static string SelectBackupDialog_NumberOfItemsColumnTitle {
            get {
                return ResourceManager.GetString("SelectBackupDialog_NumberOfItemsColumnTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string SelectBackupDialog_PathColumnTitle {
            get {
                return ResourceManager.GetString("SelectBackupDialog_PathColumnTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a backup to restore..
        /// </summary>
        internal static string SelectBackupDialog_Prompt {
            get {
                return ResourceManager.GetString("SelectBackupDialog_Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Menu Layout Backup.
        /// </summary>
        internal static string SelectBackupDialog_Title {
            get {
                return ResourceManager.GetString("SelectBackupDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select one of the following LTO Flash! devices to connect to..
        /// </summary>
        internal static string SelectDeviceDialog_Message {
            get {
                return ResourceManager.GetString("SelectDeviceDialog_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string SelectDeviceDialog_SelectButtonText {
            get {
                return ResourceManager.GetString("SelectDeviceDialog_SelectButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select LTO Flash! Device.
        /// </summary>
        internal static string SelectDeviceDialog_Title {
            get {
                return ResourceManager.GetString("SelectDeviceDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Device.
        /// </summary>
        internal static string SelectDevicesCommand_Name {
            get {
                return ResourceManager.GetString("SelectDevicesCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Active Device.
        /// </summary>
        internal static string SetActiveDeviceCommand_Name {
            get {
                return ResourceManager.GetString("SetActiveDeviceCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background file system cleanup.
        /// </summary>
        internal static string SetBackgroundGarbageCollectCommand_Name {
            get {
                return ResourceManager.GetString("SetBackgroundGarbageCollectCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, your LTO Flash! will perform file system maintenance and cleanup in the background while you navigate the menus. (Factory Default: ON).
        /// </summary>
        internal static string SetBackgroundGarbageCollectCommand_TipDescription {
            get {
                return ResourceManager.GetString("SetBackgroundGarbageCollectCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform Background File System Maintenance.
        /// </summary>
        internal static string SetBackgroundGarbageCollectCommand_TipTitle {
            get {
                return ResourceManager.GetString("SetBackgroundGarbageCollectCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Item Color.
        /// </summary>
        internal static string SetColorCommand_Name {
            get {
                return ResourceManager.GetString("SetColorCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the color of the selected menu item&apos;s icon..
        /// </summary>
        internal static string SetColorCommand_ToolTipDescription {
            get {
                return ResourceManager.GetString("SetColorCommand_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting background garbage collection mode. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_BackgroundGC_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_BackgroundGC_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set Background Garbage Collection Cleanup Mode.
        /// </summary>
        internal static string SetConfigurationCommand_BackgroundGC_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_BackgroundGC_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting compatibility mode for the ECS. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_Ecs_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_Ecs_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set ECS Compatibility Mode.
        /// </summary>
        internal static string SetConfigurationCommand_Ecs_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_Ecs_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting compatibility mode for the Intellivision II. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_IntellivisionII_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_IntellivisionII_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set Intellivision II Compatibility Mode.
        /// </summary>
        internal static string SetConfigurationCommand_IntellivisionII_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_IntellivisionII_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting keyclicks mode. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_Keyclicks_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_Keyclicks_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set Keyclicks Mode.
        /// </summary>
        internal static string SetConfigurationCommand_Keyclicks_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_Keyclicks_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting save menu position mode. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_SaveMenuPosition_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_SaveMenuPosition_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set Save Menu Position Mode.
        /// </summary>
        internal static string SetConfigurationCommand_SaveMenuPosition_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_SaveMenuPosition_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when setting title screen display mode. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetConfigurationCommand_ShowTitleScreen_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_ShowTitleScreen_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set Show Title Screen Mode.
        /// </summary>
        internal static string SetConfigurationCommand_ShowTitleScreen_Failed_Title {
            get {
                return ResourceManager.GetString("SetConfigurationCommand_ShowTitleScreen_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set device name. This may have occurred if the device was disconnected during the update, or the console power was turned on while updating the name..
        /// </summary>
        internal static string SetDeviceNameCommand_ErrorMessage {
            get {
                return ResourceManager.GetString("SetDeviceNameCommand_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Device Name Failed.
        /// </summary>
        internal static string SetDeviceNameCommand_FailedTitle {
            get {
                return ResourceManager.GetString("SetDeviceNameCommand_FailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string SetDeviceNameCommand_Name {
            get {
                return ResourceManager.GetString("SetDeviceNameCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give your LTO Flash! a name. This value is limited to a length of 18 characters..
        /// </summary>
        internal static string SetDeviceNameCommand_TipDescription {
            get {
                return ResourceManager.GetString("SetDeviceNameCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Name.
        /// </summary>
        internal static string SetDeviceNameCommand_TipTitle {
            get {
                return ResourceManager.GetString("SetDeviceNameCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to set device owner. This may have occurred if the device was disconnected during the update, or the console power was turned on while updating the owner..
        /// </summary>
        internal static string SetDeviceOwnerCommand_ErrorMessage {
            get {
                return ResourceManager.GetString("SetDeviceOwnerCommand_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Device Owner Failed.
        /// </summary>
        internal static string SetDeviceOwnerCommand_FailedTitle {
            get {
                return ResourceManager.GetString("SetDeviceOwnerCommand_FailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner.
        /// </summary>
        internal static string SetDeviceOwnerCommand_Name {
            get {
                return ResourceManager.GetString("SetDeviceOwnerCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you so desire, you may provide an owner name or other text. This value is limited to a length of 60 characters..
        /// </summary>
        internal static string SetDeviceOwnerCommand_TipDescription {
            get {
                return ResourceManager.GetString("SetDeviceOwnerCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device Owner.
        /// </summary>
        internal static string SetDeviceOwnerCommand_TipTitle {
            get {
                return ResourceManager.GetString("SetDeviceOwnerCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ECS ROM Enabled.
        /// </summary>
        internal static string SetEcsCompatibilityCommand_Name {
            get {
                return ResourceManager.GetString("SetEcsCompatibilityCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when updating the file system status. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SetFileSystemFlagsCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SetFileSystemFlagsCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to Set File System Status.
        /// </summary>
        internal static string SetFileSystemFlagsCommand_Failed_Title {
            get {
                return ResourceManager.GetString("SetFileSystemFlagsCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intellivision II Compatibility Fix.
        /// </summary>
        internal static string SetIntellivisionIICompatibilityCommand_Name {
            get {
                return ResourceManager.GetString("SetIntellivisionIICompatibilityCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable keyclicks.
        /// </summary>
        internal static string SetKeyclicksCommand_Name {
            get {
                return ResourceManager.GetString("SetKeyclicksCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the &apos;key click&apos; sound effect is active when navigating menus on the console. (Factory Default: OFF).
        /// </summary>
        internal static string SetKeyclicksCommand_TipDescription {
            get {
                return ResourceManager.GetString("SetKeyclicksCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Keyclicks.
        /// </summary>
        internal static string SetKeyclicksCommand_TipTitle {
            get {
                return ResourceManager.GetString("SetKeyclicksCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Manual....
        /// </summary>
        internal static string SetManualCommand_MenuItemName {
            get {
                return ResourceManager.GetString("SetManualCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Manual.
        /// </summary>
        internal static string SetManualCommand_Name {
            get {
                return ResourceManager.GetString("SetManualCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Save Data....
        /// </summary>
        internal static string SetSaveDataCommand_MenuItemName {
            get {
                return ResourceManager.GetString("SetSaveDataCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Save Data.
        /// </summary>
        internal static string SetSaveDataCommand_Name {
            get {
                return ResourceManager.GetString("SetSaveDataCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for Save Data.
        /// </summary>
        internal static string SetSaveDataCommand_Tip {
            get {
                return ResourceManager.GetString("SetSaveDataCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Menu Position.
        /// </summary>
        internal static string SetSaveMenuPositionCommand_Name {
            get {
                return ResourceManager.GetString("SetSaveMenuPositionCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, your LTO Flash! will resume at the last selected menu selection..
        /// </summary>
        internal static string SetSaveMenuPositionCommand_TipDescription {
            get {
                return ResourceManager.GetString("SetSaveMenuPositionCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember Menu Position.
        /// </summary>
        internal static string SetSaveMenuPositionCommand_TipTitle {
            get {
                return ResourceManager.GetString("SetSaveMenuPositionCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Title Screen.
        /// </summary>
        internal static string SetShowTitleScreenCommand_Name {
            get {
                return ResourceManager.GetString("SetShowTitleScreenCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new ROMs to menu layout.
        /// </summary>
        internal static string SettingsPage_AddRomsToMenu {
            get {
                return ResourceManager.GetString("SettingsPage_AddRomsToMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically connect to devices when detected.
        /// </summary>
        internal static string SettingsPage_AutomaticallyConnectToDevices {
            get {
                return ResourceManager.GetString("SettingsPage_AutomaticallyConnectToDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable serial port logging.
        /// </summary>
        internal static string SettingsPage_EnablePortLogging {
            get {
                return ResourceManager.GetString("SettingsPage_EnablePortLogging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt for firmware upgrade when device connects.
        /// </summary>
        internal static string SettingsPage_PromptForFirmwareUpdate {
            get {
                return ResourceManager.GetString("SettingsPage_PromptForFirmwareUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt to add new ROMs to menu layout.
        /// </summary>
        internal static string SettingsPage_PromptToAddRoms {
            get {
                return ResourceManager.GetString("SettingsPage_PromptToAddRoms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reconcile device menu layout with local menu on connect.
        /// </summary>
        internal static string SettingsPage_ReconcileDeviceMenuWithLocalMenu {
            get {
                return ResourceManager.GetString("SettingsPage_ReconcileDeviceMenuWithLocalMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform file system maintenance in background.
        /// </summary>
        internal static string SettingsPage_RunGCWhenConnected {
            get {
                return ResourceManager.GetString("SettingsPage_RunGCWhenConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for connected devices at startup.
        /// </summary>
        internal static string SettingsPage_SearchForDevicesAtStartup {
            get {
                return ResourceManager.GetString("SettingsPage_SearchForDevicesAtStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show advanced features and feedback.
        /// </summary>
        internal static string SettingsPage_ShowAdvancedFeatures {
            get {
                return ResourceManager.GetString("SettingsPage_ShowAdvancedFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show file system details.
        /// </summary>
        internal static string SettingsPage_ShowFileSystemDetails {
            get {
                return ResourceManager.GetString("SettingsPage_ShowFileSystemDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LTO Flash!.
        /// </summary>
        internal static string SettingsPage_Title {
            get {
                return ResourceManager.GetString("SettingsPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate local menu layout at startup.
        /// </summary>
        internal static string SettingsPage_ValidateMenuAtLaunch {
            get {
                return ResourceManager.GetString("SettingsPage_ValidateMenuAtLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show File System Details.
        /// </summary>
        internal static string ShowFileSystemDetailsCommand_MenuItemName {
            get {
                return ResourceManager.GetString("ShowFileSystemDetailsCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show file system details.
        /// </summary>
        internal static string ShowFileSystemDetailsCommand_Name {
            get {
                return ResourceManager.GetString("ShowFileSystemDetailsCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this option is checked, additional information about the file system of the selected LTO Flash! device is displayed..
        /// </summary>
        internal static string ShowFileSystemDetailsCommand_TipDescription {
            get {
                return ResourceManager.GetString("ShowFileSystemDetailsCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show File System Details.
        /// </summary>
        internal static string ShowFileSystemDetailsCommand_TipTitle {
            get {
                return ResourceManager.GetString("ShowFileSystemDetailsCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        internal static string ShowTitleScreen_Always {
            get {
                return ResourceManager.GetString("ShowTitleScreen_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always show the title screen whenever the system is powered on or reset to the menu. (Factory Default).
        /// </summary>
        internal static string ShowTitleScreen_Always_ToolTipDescription {
            get {
                return ResourceManager.GetString("ShowTitleScreen_Always_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string ShowTitleScreen_Never {
            get {
                return ResourceManager.GetString("ShowTitleScreen_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never show the title screen - immediately show the menu..
        /// </summary>
        internal static string ShowTitleScreen_Never_ToolTipDescription {
            get {
                return ResourceManager.GetString("ShowTitleScreen_Never_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power On.
        /// </summary>
        internal static string ShowTitleScreen_OnPowerUp {
            get {
                return ResourceManager.GetString("ShowTitleScreen_OnPowerUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only show the title screen the system is initially powered up..
        /// </summary>
        internal static string ShowTitleScreen_OnPowerUp_ToolTipDescription {
            get {
                return ResourceManager.GetString("ShowTitleScreen_OnPowerUp_ToolTipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show LTO Flash! Title Screen: {0}.
        /// </summary>
        internal static string ShowTitleScreen_ToolTipTitleFormat {
            get {
                return ResourceManager.GetString("ShowTitleScreen_ToolTipTitleFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Device Detected.
        /// </summary>
        internal static string StatusBar_NoDevice {
            get {
                return ResourceManager.GetString("StatusBar_NoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Preview Changes.
        /// </summary>
        internal static string SyncClearPreviewChangesCommand_Name {
            get {
                return ResourceManager.GetString("SyncClearPreviewChangesCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clears the preview of changes that will be applied..
        /// </summary>
        internal static string SyncClearPreviewChangesCommand_Tip {
            get {
                return ResourceManager.GetString("SyncClearPreviewChangesCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem has occurred during the menu layout update. The error was:
        ///
        ///{0}
        ///
        ///This may occur for several reasons:
        ///  - You disconnected LTO Flash! from the computer during the update
        ///  - LTO Flash! was also inserted into an Intellivision console, the console&apos;s power was turned on during the update
        ///
        ///To help ensure a consistent update:
        ///  - Turn off your Intellivision console, if applicable
        ///  - Disconnect and reconnect your LTO Flash! within this application.
        /// </summary>
        internal static string SyncDeviceToHostCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu Layout from LTO Flash! Failed.
        /// </summary>
        internal static string SyncDeviceToHostCommand_Failed_Title {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu Layout from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostCommand_MenuItemName {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostCommand_Name {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting Menu Layout from LTO Flash! ....
        /// </summary>
        internal static string SyncDeviceToHostCommand_OverlayText {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_OverlayText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostCommand_SubmenuName {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_SubmenuName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace the computer&apos;s menu layout with the menu layout on the active LTO Flash! device..
        /// </summary>
        internal static string SyncDeviceToHostCommand_Tip {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu Layout from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostCommand_TipTitle {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The menu layout update from your LTO Flash! was cancelled. This should not have modified the contents of your menu layout..
        /// </summary>
        internal static string SyncDeviceToHostCommandCancelled_Message {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandCancelled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu Layout from LTO Flash! Cancelled.
        /// </summary>
        internal static string SyncDeviceToHostCommandCancelled_Title {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandCancelled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As much data has been retrieved as possible, but not all items on the device will be reachable. A complete list of these items has been recorded in an error report in the ErrorLogs directory..
        /// </summary>
        internal static string SyncDeviceToHostCommandComplete_DireWarning {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandComplete_DireWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of your menu layout have been updated to match the contents of your LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostCommandComplete_Message {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandComplete_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Menu Layout from LTO Flash! Complete.
        /// </summary>
        internal static string SyncDeviceToHostCommandComplete_Title {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandComplete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of your menu layout have been updated. However, during the process, some inconsistencies were encountered:.
        /// </summary>
        internal static string SyncDeviceToHostCommandComplete_WarningsMessage {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandComplete_WarningsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anomolies During Get Menu Layout.
        /// </summary>
        internal static string SyncDeviceToHostCommandComplete_WarningTitle {
            get {
                return ResourceManager.GetString("SyncDeviceToHostCommandComplete_WarningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview Changes to Apply to Menu Layout from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostPreviewCommand_Name {
            get {
                return ResourceManager.GetString("SyncDeviceToHostPreviewCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlights changes to the menu layout that will be made to the menu layout on your computer when getting the menu layout from from LTO Flash!.
        /// </summary>
        internal static string SyncDeviceToHostPreviewCommand_Tip {
            get {
                return ResourceManager.GetString("SyncDeviceToHostPreviewCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing LTO Flash! Layout to Host Menu Menu Layout....
        /// </summary>
        internal static string SyncDeviceToHostPreviewCommand_Title {
            get {
                return ResourceManager.GetString("SyncDeviceToHostPreviewCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system was already in an inconsistent state.
        /// </summary>
        internal static string SyncErrors_DirtyFileSystemMessage {
            get {
                return ResourceManager.GetString("SyncErrors_DirtyFileSystemMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create entries for {0} items.
        /// </summary>
        internal static string SyncErrors_MissingEntriesFormat {
            get {
                return ResourceManager.GetString("SyncErrors_MissingEntriesFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A total of {0} unreachable data forks were discovered.
        /// </summary>
        internal static string SyncErrors_OrphanedForksFormat {
            get {
                return ResourceManager.GetString("SyncErrors_OrphanedForksFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve {0} forks from device.
        /// </summary>
        internal static string SyncErrors_UnableToRetrieveForksFormat {
            get {
                return ResourceManager.GetString("SyncErrors_UnableToRetrieveForksFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A total of {0} unsupported data forks were discovered.
        /// </summary>
        internal static string SyncErrors_UnsupportedForksFormat {
            get {
                return ResourceManager.GetString("SyncErrors_UnsupportedForksFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You may wish to check for an updated version the LTO Flash! User Interface software if you continue to encounter this error..
        /// </summary>
        internal static string SyncErrors_UnsupportedForksInfo {
            get {
                return ResourceManager.GetString("SyncErrors_UnsupportedForksInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve update operation data..
        /// </summary>
        internal static string SyncHostToDevice_FetchUpdateOperationFailedMessage {
            get {
                return ResourceManager.GetString("SyncHostToDevice_FetchUpdateOperationFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem has occurred during the file system update. The file system on your LTO Flash! device may have been left in an inconsistent state. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This problem may occur for several reasons:
        ///  - You disconnected LTO Flash! from your computer during the update
        ///  - LTO Flash! was also inserted into an Intellivision console, the console&apos;s power was turned on during the update
        ///  - Files necessary for the update could not be found
        ///  - An error occurred when preparing the file for deployment
        ///
        ///To ensure a consistent update:
        ///  - Turn off your console, if applicable
        ///  - Disconnect and reconnect your LTO Flash! within this application
        ///  - Ensure that a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Failed_Resolution {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Failed_Resolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File System Update Failed.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Failed_Title {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to gather data needed to update file system..
        /// </summary>
        internal static string SyncHostToDeviceCommand_GatherUpdatesFailedMessage {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_GatherUpdatesFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Menu Layout to LTO Flash!.
        /// </summary>
        internal static string SyncHostToDeviceCommand_MenuItemName {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_MenuItemName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send to LTO Flash!.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Name {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating Menu Layout....
        /// </summary>
        internal static string SyncHostToDeviceCommand_OverlayText {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_OverlayText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Menu to LTO Flash!.
        /// </summary>
        internal static string SyncHostToDeviceCommand_SubmenuName {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_SubmenuName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send the menu layout to the connected LTO Flash! device, so it will match computer&apos;s menu layout..
        /// </summary>
        internal static string SyncHostToDeviceCommand_TipDescription {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Menu to LTO Flash!.
        /// </summary>
        internal static string SyncHostToDeviceCommand_TipTitle {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_TipTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to : LTO Flash! Not Available for Update Operations.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Unavailable_Generic {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Unavailable_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to : LTO Flash! Not Connected.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Unavailable_NoDevice {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Unavailable_NoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to : Update Unavailable when Console Power is On.
        /// </summary>
        internal static string SyncHostToDeviceCommand_Unavailable_PowerOn {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_Unavailable_PowerOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detailed Information:.
        /// </summary>
        internal static string SyncHostToDeviceCommand_WarningDetailHeader {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_WarningDetailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File: {0}\nMessage: {1}.
        /// </summary>
        internal static string SyncHostToDeviceCommand_WarningFormat {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_WarningFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Although the update succeeded, issues were found. It is possible that backup copies of some ROMs were used if the originals could not be located for verification. The available information is presented below..
        /// </summary>
        internal static string SyncHostToDeviceCommand_WarningMessage {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommand_WarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system update to your LTO Flash! was cancelled. This may have resulted in files that are present, but not reachable in the menu from your Intellivision console.
        ///
        ///To resume the update process, simply start again. The update will resume from the point at which it was interrupted. If you make further changes before resuming, those will also be included in the next udpate.
        ///
        ///Would you also see which changes remain to be applied?.
        /// </summary>
        internal static string SyncHostToDeviceCommandCancelled_Message {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommandCancelled_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File System Update Cancelled.
        /// </summary>
        internal static string SyncHostToDeviceCommandCancelled_Title {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommandCancelled_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file system update to send the menu layout to your LTO Flash! was cancelled before any changes were made..
        /// </summary>
        internal static string SyncHostToDeviceCommandCancelledNoChanges_Message {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommandCancelledNoChanges_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contents of your LTO Flash! have been successfully updated..
        /// </summary>
        internal static string SyncHostToDeviceCommandComplete_Message {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommandComplete_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Menu Layout to LTO FLash! Complete.
        /// </summary>
        internal static string SyncHostToDeviceCommandComplete_Title {
            get {
                return ResourceManager.GetString("SyncHostToDeviceCommandComplete_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview Changes to Apply to LTO Flash!.
        /// </summary>
        internal static string SyncHostToDevicePreviewCommand_Name {
            get {
                return ResourceManager.GetString("SyncHostToDevicePreviewCommand_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlights changes that will be made to LTO Flash! when updating the menu layout..
        /// </summary>
        internal static string SyncHostToDevicePreviewCommand_Tip {
            get {
                return ResourceManager.GetString("SyncHostToDevicePreviewCommand_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comparing Host Menu Layout to LTO Flash! Menu Layout....
        /// </summary>
        internal static string SyncHostToDevicePreviewCommand_Title {
            get {
                return ResourceManager.GetString("SyncHostToDevicePreviewCommand_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem has occurred while generating the changes preview. The error was:
        ///
        ///{0}.
        /// </summary>
        internal static string SyncPreviewCommand_Failed_Message_Format {
            get {
                return ResourceManager.GetString("SyncPreviewCommand_Failed_Message_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This may occur if you disconnected LTO Flash! from your computer during the process or, if your LTO Flash! was also inserted into an Intellivision console, the console&apos;s power was turned on during the operation.
        ///
        ///To prevent this error, turn off your console, if applicable, and try again. If the problem persists, also disconnect your LTO Flash! from your computer and reconnect it..
        /// </summary>
        internal static string SyncPreviewCommand_Failed_Resolution {
            get {
                return ResourceManager.GetString("SyncPreviewCommand_Failed_Resolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to Preview Changes.
        /// </summary>
        internal static string SyncPreviewCommand_Failed_Title {
            get {
                return ResourceManager.GetString("SyncPreviewCommand_Failed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device.
        /// </summary>
        internal static string Toolbar_LtoFlash_Device_Header {
            get {
                return ResourceManager.GetString("Toolbar_LtoFlash_Device_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unsupported fork of type &apos;{0}&apos; has been encountered..
        /// </summary>
        internal static string UnsupportedForkKindException_MessageFormat {
            get {
                return ResourceManager.GetString("UnsupportedForkKindException_MessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data file &apos;{0}&apos; has an invalid size of {1} bytes..
        /// </summary>
        internal static string UpdateFileSystemError_InvalidSizeErrorFormat {
            get {
                return ResourceManager.GetString("UpdateFileSystemError_InvalidSizeErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data file &apos;{0}&apos; cannot be found..
        /// </summary>
        internal static string UpdateFileSystemError_MissingFileErrorFormat {
            get {
                return ResourceManager.GetString("UpdateFileSystemError_MissingFileErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to compute update operation for data file &apos;{0}&apos;..
        /// </summary>
        internal static string UpdateFileSystemError_UnexpectedErrorFormat {
            get {
                return ResourceManager.GetString("UpdateFileSystemError_UnexpectedErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware update file:
        ///
        ///  {0}
        ///
        ///could not be found..
        /// </summary>
        internal static string UpdateFirmwareCommand_FileNotFoundErrorMessageFormat {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_FileNotFoundErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware File Not Found.
        /// </summary>
        internal static string UpdateFirmwareCommand_FileNotFoundErrorTitle {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_FileNotFoundErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware update file:
        ///
        ///  {0}
        ///
        ///is too large ({1} bytes)..
        /// </summary>
        internal static string UpdateFirmwareCommand_FileTooLargeErrorMessageFormat {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_FileTooLargeErrorMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firmware File Too Large.
        /// </summary>
        internal static string UpdateFirmwareCommand_FileTooLargeErrorTitle {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_FileTooLargeErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware update file:
        ///
        ///  {0}
        ///
        ///does not appear to be a valid firmware update..
        /// </summary>
        internal static string UpdateFirmwareCommand_InvalidFileMessageFormat {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_InvalidFileMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Firmware File.
        /// </summary>
        internal static string UpdateFirmwareCommand_InvalidFileTitle {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_InvalidFileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update to a different version of LTO Flash! firmware..
        /// </summary>
        internal static string UpdateFirmwareCommand_TipDescription {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_TipDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The firmware update file:
        ///
        ///  {0}
        ///
        ///could not be validated..
        /// </summary>
        internal static string UpdateFirmwareCommand_ValidationFailedFormat {
            get {
                return ResourceManager.GetString("UpdateFirmwareCommand_ValidationFailedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details:.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorDetailExceptionHeader {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorDetailExceptionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following errors were found:.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorDetailHeader {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorDetailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error message: {0}.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorDetailMessageFormat {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorDetailMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROM file Location: {0}.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorDetailRomPathFormat {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorDetailRomPathFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROM file format: {0}.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorDetailRomTypeFormat {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorDetailRomTypeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while updating the program features for LTO Flash!. This may occur if a ROM is missing or corrupt. Verify the ROM exists and is valid..
        /// </summary>
        internal static string UpdateRomFeatures_ErrorMessage {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Updating ROM Features.
        /// </summary>
        internal static string UpdateRomFeatures_ErrorTitle {
            get {
                return ResourceManager.GetString("UpdateRomFeatures_ErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The memory address: 0x{0:X8} is not properly word aligned..
        /// </summary>
        internal static string ValidateDataBlock_BadAddressAlignmentFormat {
            get {
                return ResourceManager.GetString("ValidateDataBlock_BadAddressAlignmentFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The memory address: 0x{0:X8} for the data block in LTO Flash! RAM is invalid..
        /// </summary>
        internal static string ValidateDataBlock_BadAddressFormat {
            get {
                return ResourceManager.GetString("ValidateDataBlock_BadAddressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data block of size {0} cannot be placed into LTO Flash! RAM at address: 0x{1:X8}..
        /// </summary>
        internal static string ValidateDataBlock_BadSizeOrAddressFormat {
            get {
                return ResourceManager.GetString("ValidateDataBlock_BadSizeOrAddressFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data block size of {0} is too large to fit into LTO Flash! RAM..
        /// </summary>
        internal static string ValidateDataBlock_BlockTooLargeFormat {
            get {
                return ResourceManager.GetString("ValidateDataBlock_BlockTooLargeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data block size cannot be zero!.
        /// </summary>
        internal static string ValidateDataBlock_ZeroBlockSize {
            get {
                return ResourceManager.GetString("ValidateDataBlock_ZeroBlockSize", resourceCulture);
            }
        }
    }
}
