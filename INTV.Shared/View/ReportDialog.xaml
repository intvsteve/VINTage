<!--
    <copyright file="ReportDialog.xaml" company="INTV Funhouse">
    Copyright (c) 2014-2015 All Rights Reserved
    <author>Steven A. Orth</author>

    This program is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 2 of the License, or (at your
    option) any later version.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License along
    with this software. If not, see: http://www.gnu.org/licenses/.
    or write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA

    </copyright>
-->
<Window x:Class="INTV.Shared.View.ReportDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:INTV.Shared.ViewModel"
        xmlns:converter="clr-namespace:INTV.Shared.Converter"
        xmlns:behavior="clr-namespace:INTV.Shared.Behavior" UseLayoutRounding="True" SnapsToDevicePixels="True"
        Title="{Binding Title}" Height="296" Width="480" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <viewModel:ReportDialogViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
        <converter:OSTextWrappingConverter x:Key="WrappingConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Margin="4" TextWrapping="Wrap" Text="{Binding Message}"/>
        <TextBox Grid.Row="1" Margin="4" MinHeight="86" IsReadOnly="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" TextWrapping="{Binding TextWrapping, Converter={StaticResource WrappingConverter}}" Text="{Binding ReportText, Mode=OneWay}"/>
        <Grid Grid.Row="2" Margin="0,8,5,7" Visibility="{Binding ShowEmailSender, Converter={StaticResource BooleanToVisibility}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="4" Text="{x:Static viewModel:ReportDialogViewModel.EmailLabel}"/>
            <TextBox Grid.Row="0" Grid.Column="1" Margin="0,4,4,4" Text="{Binding EmailSender}" behavior:ValidEmailAddressBehavior.IsEmailAddressEditor="True">
                <TextBox.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="behavior:ValidEmailAddressBehavior.IsValidEmailAddress" Value="False">
                                <Setter Property="TextBox.Foreground" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <TextBlock Grid.Row="1" Grid.Column="1" Margin="4" TextWrapping="Wrap" Text="{x:Static viewModel:ReportDialogViewModel.EmailReminderText}"/>
        </Grid>
        <CheckBox Grid.Row="3" Margin="4" HorizontalAlignment="Right" Content="{Binding DoNotShowAgainText, Mode=OneWay}"
                  Visibility="{Binding ShowDoNotShowAgain, Converter={StaticResource BooleanToVisibility}}"/>
        <Border Grid.Row="4" Background="{x:Static SystemColors.ControlBrush}">
            <StackPanel Margin="0,8,5,7" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Margin="4" Padding="8,4" MinWidth="48" Content="{x:Static viewModel:ReportDialogViewModel.ShowFilesText}"
                        Command="{x:Static viewModel:ReportDialogViewModel.ShowAttachmentsInFileSystemCommand}" CommandParameter="{Binding}"
                        Visibility="{Binding HasAttachments, Converter={StaticResource BooleanToVisibility}}"/>
                <Button Margin="4" Padding="8,4" MinWidth="48" Content="{x:Static viewModel:ReportDialogViewModel.SendEmailButtonText}"
                        Command="{x:Static viewModel:ReportDialogViewModel.SendErrorReportEmailCommand}" CommandParameter="{Binding}"
                        Visibility="{Binding ShowSendEmailButton, Converter={StaticResource BooleanToVisibility}}"
                        IsEnabled="{Binding SendEmailEnabled}"/>
                <Button Margin="4" Padding="8,4" MinWidth="48" Content="{x:Static viewModel:ReportDialogViewModel.CopyToClipboardButtonText}"
                        Command="{x:Static viewModel:ReportDialogViewModel.CopyToClipboardCommand}" CommandParameter="{Binding}"
                        Visibility="{Binding ShowCopyToClipboardButton, Converter={StaticResource BooleanToVisibility}}"/>
                <Button Margin="4" Padding="8,4" MinWidth="48" Content="{Binding CloseDialogButtonText}"
                        Command="{x:Static viewModel:ReportDialogViewModel.CloseDialogCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
            </StackPanel>
        </Border>
    </Grid>
</Window>
