
// This file has been generated by the GUI designer. Do not modify.
namespace INTV.Shared.View
{
	public partial class CompressedArchiveAccessSettings
	{
		private global::Gtk.VBox vbox2;

		private global::Gtk.RadioButton _compressedArchivesDisabled;

		private global::Gtk.RadioButton _compressedArchivesAll;

		private global::Gtk.RadioButton _compressedArchivesCustom;

		private global::Gtk.Alignment alignment2;

		private global::Gtk.VBox vbox3;

		private global::Gtk.ScrolledWindow GtkScrolledWindow;

		private global::Gtk.TreeView _availableCompressedArchiveFormats;

		private global::Gtk.Label _compoundArchiveFormats;

		private global::Gtk.CheckButton _enableNestedArchives;

		private global::Gtk.HBox hbox1;

		private global::Gtk.SpinButton _maxArchiveSize;

		private global::Gtk.Label _maxArchiveSizeLabel;

		protected virtual void Build()
		{
			global::Stetic.Gui.Initialize(this);
			// Widget INTV.Shared.View.CompressedArchiveAccessSettings
			global::Stetic.BinContainer.Attach(this);
			this.Name = "INTV.Shared.View.CompressedArchiveAccessSettings";
			// Container child INTV.Shared.View.CompressedArchiveAccessSettings.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox();
			this.vbox2.Name = "vbox2";
			// Container child vbox2.Gtk.Box+BoxChild
			this._compressedArchivesDisabled = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Do not use compressed archives"));
			this._compressedArchivesDisabled.TooltipMarkup = "Disable compressed archive support";
			this._compressedArchivesDisabled.CanFocus = true;
			this._compressedArchivesDisabled.Name = "_compressedArchivesDisabled";
			this._compressedArchivesDisabled.DrawIndicator = true;
			this._compressedArchivesDisabled.UseUnderline = true;
			this._compressedArchivesDisabled.Group = new global::GLib.SList(global::System.IntPtr.Zero);
			this.vbox2.Add(this._compressedArchivesDisabled);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.vbox2[this._compressedArchivesDisabled]));
			w1.Position = 0;
			w1.Expand = false;
			w1.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this._compressedArchivesAll = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Use all supported compressed archive file types"));
			this._compressedArchivesAll.TooltipMarkup = "Enable using all compressed archive formats currently supported";
			this._compressedArchivesAll.CanFocus = true;
			this._compressedArchivesAll.Name = "_compressedArchivesAll";
			this._compressedArchivesAll.DrawIndicator = true;
			this._compressedArchivesAll.UseUnderline = true;
			this._compressedArchivesAll.Group = this._compressedArchivesDisabled.Group;
			this.vbox2.Add(this._compressedArchivesAll);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox2[this._compressedArchivesAll]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this._compressedArchivesCustom = new global::Gtk.RadioButton(global::Mono.Unix.Catalog.GetString("Select compressed archive file types to use"));
			this._compressedArchivesCustom.TooltipMarkup = "Select which compressed archive formats to use";
			this._compressedArchivesCustom.CanFocus = true;
			this._compressedArchivesCustom.Name = "_compressedArchivesCustom";
			this._compressedArchivesCustom.DrawIndicator = true;
			this._compressedArchivesCustom.UseUnderline = true;
			this._compressedArchivesCustom.Group = this._compressedArchivesDisabled.Group;
			this.vbox2.Add(this._compressedArchivesCustom);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2[this._compressedArchivesCustom]));
			w3.Position = 2;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.alignment2 = new global::Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
			this.alignment2.Name = "alignment2";
			this.alignment2.LeftPadding = ((uint)(25));
			// Container child alignment2.Gtk.Container+ContainerChild
			this.vbox3 = new global::Gtk.VBox();
			this.vbox3.Name = "vbox3";
			// Container child vbox3.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.HscrollbarPolicy = ((global::Gtk.PolicyType)(2));
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this._availableCompressedArchiveFormats = new global::Gtk.TreeView();
			this._availableCompressedArchiveFormats.CanFocus = true;
			this._availableCompressedArchiveFormats.Name = "_availableCompressedArchiveFormats";
			this._availableCompressedArchiveFormats.EnableSearch = false;
			this.GtkScrolledWindow.Add(this._availableCompressedArchiveFormats);
			this.vbox3.Add(this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.GtkScrolledWindow]));
			w5.Position = 0;
			// Container child vbox3.Gtk.Box+BoxChild
			this._compoundArchiveFormats = new global::Gtk.Label();
			this._compoundArchiveFormats.Name = "_compoundArchiveFormats";
			this._compoundArchiveFormats.Xpad = 20;
			this._compoundArchiveFormats.Ypad = 2;
			this._compoundArchiveFormats.Xalign = 0F;
			this._compoundArchiveFormats.Yalign = 0F;
			this._compoundArchiveFormats.LabelProp = global::Mono.Unix.Catalog.GetString("\n\n\n");
			this.vbox3.Add(this._compoundArchiveFormats);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox3[this._compoundArchiveFormats]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this._enableNestedArchives = new global::Gtk.CheckButton();
			this._enableNestedArchives.TooltipMarkup = "If this option is enabled, and an archive contains another archive within it, inc" +
				"lude it when searching for ROMs, et. al.\nNote that this may result in increased " +
				"memory usage and create copies of nested archives on your system.";
			this._enableNestedArchives.CanFocus = true;
			this._enableNestedArchives.Name = "_enableNestedArchives";
			this._enableNestedArchives.Label = global::Mono.Unix.Catalog.GetString("Include nested archives");
			this._enableNestedArchives.DrawIndicator = true;
			this._enableNestedArchives.UseUnderline = true;
			this.vbox3.Add(this._enableNestedArchives);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox3[this._enableNestedArchives]));
			w7.Position = 2;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox3.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this._maxArchiveSize = new global::Gtk.SpinButton(0D, 1024D, 1D);
			this._maxArchiveSize.TooltipMarkup = "Compressed archive files larger than this size (in Megabytes) are ignored.\nSet th" +
				"is value to zero (0) to remove the size limitation. You can set this value to 0 " +
				"- 1024 MB.";
			this._maxArchiveSize.CanFocus = true;
			this._maxArchiveSize.Name = "_maxArchiveSize";
			this._maxArchiveSize.Adjustment.PageIncrement = 10D;
			this._maxArchiveSize.ClimbRate = 1D;
			this._maxArchiveSize.Numeric = true;
			this.hbox1.Add(this._maxArchiveSize);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.hbox1[this._maxArchiveSize]));
			w8.Position = 0;
			w8.Expand = false;
			w8.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this._maxArchiveSizeLabel = new global::Gtk.Label();
			this._maxArchiveSizeLabel.Name = "_maxArchiveSizeLabel";
			this._maxArchiveSizeLabel.LabelProp = global::Mono.Unix.Catalog.GetString("Maximum archive size supported (MB)");
			this.hbox1.Add(this._maxArchiveSizeLabel);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox1[this._maxArchiveSizeLabel]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			this.vbox3.Add(this.hbox1);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox3[this.hbox1]));
			w10.Position = 3;
			w10.Expand = false;
			w10.Fill = false;
			this.alignment2.Add(this.vbox3);
			this.vbox2.Add(this.alignment2);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.vbox2[this.alignment2]));
			w12.Position = 3;
			this.Add(this.vbox2);
			if ((this.Child != null))
			{
				this.Child.ShowAll();
			}
			this.Hide();
			this._compressedArchivesDisabled.Toggled += new global::System.EventHandler(this.HandleCompressedArchiveSelectionChanged);
			this._compressedArchivesAll.Toggled += new global::System.EventHandler(this.HandleCompressedArchiveSelectionChanged);
			this._compressedArchivesCustom.Toggled += new global::System.EventHandler(this.HandleCompressedArchiveSelectionChanged);
			this._enableNestedArchives.Toggled += new global::System.EventHandler(this.HandleEnableNestedArchivesToggled);
			this._maxArchiveSize.ValueChanged += new global::System.EventHandler(this.HandleMaxArchiveSizeChanged);
		}
	}
}
